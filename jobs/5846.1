travis_fold:start:worker_infoWorker information
hostname: 70fee7e8-af30-4fea-bde1-d515bb5fae2a@1.worker-org-8b5957499-7n7xm.gce-production-3
version: v6.2.17 https://github.com/travis-ci/worker/tree/bc420764f334fe0d096a417c80426f672f1b7d18
instance: travis-job-cb747928-f6a7-4a56-bc2b-745cfd3f69d5 travis-ci-sardonyx-xenial-1593004276-4d46c6b3 (via amqp)
startup: 5.982966981s
travis_fold:end:worker_infoe:start:16cb1dcde:end:16cb1dcd:start=1595725761761849156,finish=1595725761921938512,duration=160089356,event=no_world_writable_dirse:start:1ac92318e:end:1ac92318:start=1595725761925051376,finish=1595725761928198812,duration=3147436,event=setup_filtere:start:0c26cc8ce:end:0c26cc8c:start=1595725761932696374,finish=1595725761945854628,duration=13158254,event=agente:start:02a3ef0ee:end:02a3ef0e:start=1595725761950770357,finish=1595725761953585141,duration=2814784,event=check_unsupportede:start:272340ca_infoBuild system information
Build language: node_js
Build dist: xenial
Build id: 711842139
Job id: 711842140
Runtime kernel version: 4.15.0-1077-gcp
travis-build version: 6a7410c5
Build image provisioning date and time
Wed Jun 24 13:36:52 UTC 2020
Operating System Details
Distributor ID:Ubuntu
Description:Ubuntu 16.04.6 LTS
Release:16.04
Codename:xenial
Systemd Version
systemd 229
Cookbooks Version
3f92a99 https://github.com/travis-ci/travis-cookbooks/tree/3f92a99
git version
git version 2.27.0
bash version
GNU bash, version 4.3.48(1)-release (x86_64-pc-linux-gnu)
gcc version
gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
docker version
Client:
 Version:           18.06.0-ce
 API version:       1.38
 Go version:        go1.10.3
 Git commit:        0ffa825
 Built:             Wed Jul 18 19:11:02 2018
 OS/Arch:           linux/amd64
 Experimental:      false

Server:
 Engine:
  Version:          18.06.0-ce
  API version:      1.38 (minimum version 1.12)
  Go version:       go1.10.3
  Git commit:       0ffa825
  Built:            Wed Jul 18 19:09:05 2018
  OS/Arch:          linux/amd64
  Experimental:     false
clang version
clang version 7.0.0 (tags/RELEASE_700/final)
jq version
jq-1.5
bats version
Bats 0.4.0
shellcheck version
0.7.0
shfmt version
v2.6.3
ccache version
3.2.4
cmake version
cmake version 3.12.4
heroku version
heroku/7.42.1 linux-x64 node-v12.16.2
imagemagick version
Version: ImageMagick 6.8.9-9 Q16 x86_64 2019-11-12 http://www.imagemagick.org
md5deep version
4.4
mercurial version
version 4.8
mysql version
mysql  Ver 14.14 Distrib 5.7.30, for Linux (x86_64) using  EditLine wrapper
openssl version
OpenSSL 1.0.2g  1 Mar 2016
packer version
1.3.3
postgresql client version
psql (PostgreSQL) 10.13 (Ubuntu 10.13-1.pgdg16.04+1)
ragel version
Ragel State Machine Compiler version 6.8 Feb 2013
sudo version
1.8.16
gzip version
gzip 1.6
zip version
Zip 3.0
vim version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Mar 18 2020 14:06:17)
iptables version
iptables v1.6.0
curl version
curl 7.47.0 (x86_64-pc-linux-gnu) libcurl/7.47.0 GnuTLS/3.4.10 zlib/1.2.8 libidn/1.32 librtmp/2.3
wget version
GNU Wget 1.17.1 built on linux-gnu.
rsync version
rsync  version 3.1.1  protocol version 31
gimme version
v1.5.4
nvm version
0.35.3
perlbrew version
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.88
phpenv version
rbenv 1.1.2-30-gc879cb0
rvm version
rvm 1.29.10 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
default ruby version
ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-linux]
CouchDB version
couchdb 1.6.1
ElasticSearch version
5.5.0
Installed Firefox version
firefox 63.0.1
MongoDB version
MongoDB 4.0.19
PhantomJS version
2.1.1
Pre-installed PostgreSQL versions
9.4.26
9.5.22
9.6.18
Redis version
redis-server 6.0.5
Pre-installed Go versions
1.11.1
ant version
Apache Ant(TM) version 1.9.6 compiled on July 20 2018
mvn version
Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)
gradle version
Gradle 5.1.1!
lein version
Leiningen 2.9.3 on Java 11.0.2 OpenJDK 64-Bit Server VM
Pre-installed Node.js versions
v10.21.0
v11.0.0
v12.18.1
v4.9.1
v6.17.1
v8.12.0
v8.17.0
v8.9
phpenv versions
  system
  5.6
  5.6.40
  7.1
  7.1.27
  7.2
* 7.2.15 (set by /home/travis/.phpenv/version)
  hhvm
  hhvm-stable
composer --version
Composer version 1.8.4 2019-02-11 10:52:10
Pre-installed Ruby versions
ruby-2.3.8
ruby-2.4.5
ruby-2.5.3
travis_fold:end:system_infoe:end:272340ca:start=1595725761957585287,finish=1595725761964517852,duration=6932565,event=show_system_infoe:start:12853f3ce:end:12853f3c:start=1595725761968571468,finish=1595725761997952860,duration=29381392,event=rm_riak_sourcee:start:2096fcbbe:end:2096fcbb:start=1595725762003802930,finish=1595725762010096755,duration=6293825,event=fix_rwky_redise:start:32e84a80e:end:32e84a80:start=1595725762013498172,finish=1595725762463738675,duration=450240503,event=wait_for_networke:start:237b8f65e:end:237b8f65:start=1595725762469942753,finish=1595725762717933887,duration=247991134,event=update_apt_keyse:start:170233f2e:end:170233f2:start=1595725762723333705,finish=1595725762778410923,duration=55077218,event=fix_hhvm_sourcee:start:06bc46c0e:end:06bc46c0:start=1595725762783179894,finish=1595725762786168157,duration=2988263,event=update_mongo_arche:start:2627fd76e:end:2627fd76:start=1595725762790406573,finish=1595725762832450504,duration=42043931,event=fix_sudo_enabled_trustye:start:0f95c748e:end:0f95c748:start=1595725762837108140,finish=1595725762839527842,duration=2419702,event=update_glibce:start:0c7bb160e:end:0c7bb160:start=1595725762843783601,finish=1595725762852248502,duration=8464901,event=clean_up_pathe:start:05276023e:end:05276023:start=1595725762856443162,finish=1595725762865605977,duration=9162815,event=fix_resolv_confe:start:0a86d8dee:end:0a86d8de:start=1595725762871518119,finish=1595725762882021931,duration=10503812,event=fix_etc_hostse:start:03b2c82ce:end:03b2c82c:start=1595725762886794940,finish=1595725762898065771,duration=11270831,event=fix_mvn_settings_xmle:start:0c39b960e:end:0c39b960:start=1595725762902044670,finish=1595725762912311083,duration=10266413,event=no_ipv6_localhoste:start:0d8166e2e:end:0d8166e2:start=1595725762917737877,finish=1595725762921069380,duration=3331503,event=fix_etc_mavenrce:start:1817b5fee:end:1817b5fe:start=1595725762928697382,finish=1595725762932288809,duration=3591427,event=fix_wwdr_certificatee:start:01eae3a2e:end:01eae3a2:start=1595725762939321980,finish=1595725762965516340,duration=26194360,event=put_localhost_firste:start:08e29ae0e:end:08e29ae0:start=1595725762972017951,finish=1595725762976204895,duration=4186944,event=home_pathse:start:108426e0e:end:108426e0:start=1595725762980118574,finish=1595725762992872044,duration=12753470,event=disable_initramfse:start:1fb64734e:end:1fb64734:start=1595725762996748620,finish=1595725763377991584,duration=381242964,event=disable_ssh_roaminge:start:1f1d5a70e:end:1f1d5a70:start=1595725763382331703,finish=1595725763384659654,duration=2327951,event=debug_toolse:start:0f7c5c84e:end:0f7c5c84:start=1595725763388885219,finish=1595725763392612040,duration=3726821,event=uninstall_oclinte:start:06e53da3e:end:06e53da3:start=1595725763396331833,finish=1595725763399494549,duration=3162716,event=rvm_usee:start:0ad705c2e:end:0ad705c2:start=1595725763404154538,finish=1595725763412694186,duration=8539648,event=rm_etc_boto_cfge:start:08a68611e:end:08a68611:start=1595725763417478581,finish=1595725763422841085,duration=5362504,event=rm_oraclejdk8_symlinke:start:37cc2b94e:end:37cc2b94:start=1595725763429526695,finish=1595725763538571307,duration=109044612,event=enable_i386e:start:22bda292e:end:22bda292:start=1595725763543885477,finish=1595725763550044386,duration=6158909,event=update_rubygemse:start:13b439f9e:end:13b439f9:start=1595725763556796565,finish=1595725764396009632,duration=839213067,event=ensure_path_componentse:start:1fe00c5ce:end:1fe00c5c:start=1595725764401220906,finish=1595725764404140984,duration=2920078,event=redefine_curle:start:0b2a165ce:end:0b2a165c:start=1595725764409815168,finish=1595725764532026879,duration=122211711,event=nonblock_pipee:start:0359a783e:end:0359a783:start=1595725764539036420,finish=1595725770574552383,duration=6035515963,event=apt_get_updatee:start:3733acc1e:end:3733acc1:start=1595725770579437606,finish=1595725770582229976,duration=2792370,event=deprecate_xcode_64e:start:0f9f7f44e:end:0f9f7f44:start=1595725770587101216,finish=1595725773145205832,duration=2558104616,event=update_herokue:start:3ec8fb50e:end:3ec8fb50:start=1595725773150406780,finish=1595725773153252146,duration=2845366,event=shell_session_updatee:start:02108707tutue:end:02108707:start=1595725773158421139,finish=1595725775476164395,duration=2317743256,event=set_docker_mtue:start:1ed79c37e:end:1ed79c37:start=1595725775481679810,finish=1595725775550660719,duration=68980909,event=resolvconfe:start:04e32dc2e:end:04e32dc2:start=1595725775559420707,finish=1595725775716392818,duration=156972111,event=maven_central_mirrore:start:08d4b55ee:end:08d4b55e:start=1595725775722148766,finish=1595725775824674812,duration=102526046,event=maven_httpse:start:010e7d37e:start:0d325307ctl start docker
travis_time:end:0d325307:start=1595725775836348549,finish=1595725775850577862,duration=14229313,event=preparee:end:0d325307:start=1595725775836348549,finish=1595725778857881230,duration=3021532681,event=servicese:start:0aa0e180e:end:0aa0e180:start=1595725778865172360,finish=1595725778869680662,duration=4508302,event=fix_ps4e:start:02cfd360e:start:13f04f2eochaupdate https://github.com/ether/[secure].git ether/[secure]
Cloning into 'ether/[secure]'...
travis_time:end:13f04f2e:start=1595725778877980548,finish=1595725779791172085,duration=913191537,event=checkoute:end:13f04f2e:start=1595725778877980548,finish=1595725779857281932,duration=979301384,event=checkoute:start:068ada7fSetting environment variables from repository settings
$ export SAUCE_USERNAME=[secure]
$ export SAUCE_ACCESS_KEY=[secure]

Setting environment variables from .travis.yml
$ export SAUCE_USERNAME=[secure]
$ export SAUCE_ACCESS_KEY=[secure]

travis_time:end:068ada7f:start=1595725779862501651,finish=1595725779873582804,duration=11081153,event=env.installe:start:017316fd install lts/*
Downloading and installing node v12.18.3...
Downloading https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz...
Computing checksum with sha256sum
Checksums matched!
Now using node v12.18.3 (npm v6.14.6)
travis_time:end:017316fd:start=1595725780414217675,finish=1595725783207453180,duration=2793235505,event=setup.install --version
6.14.6
$ nvm --version
0.35.3

travis_fold:start:install.1e:start:03716047plate > settings.json
travis_time:end:03716047:start=1595725783759282428,finish=1595725783765169264,duration=5886836,event=installe:start:045bb013e    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0  1  9.8M    1  192k    0     0   243k      0  0:00:41 --:--:--  0:00:41  243k100  9.8M  100  9.8M    0     0  7793k      0  0:00:01  0:00:01 --:--:-- 7799k
travis_time:end:045bb013:start=1595725783770449309,finish=1595725810347272718,duration=26576823409,event=installe:start:109d0799e you have run Etherpad please be patient.

> wd@1.12.1 install /home/travis/build/ether/[secure]/src/node_modules/wd
> node scripts/build-browser-scripts

added 1126 packages in 10.932s
Clearing minified cache...
travis_time:end:109d0799:start=1595725810352296109,finish=1595725821869710371,duration=11517414262,event=installe:start:0c83a0cce:end:0c83a0cc:start=1595725821876696786,finish=1595725821885985741,duration=9288955,event=installe:start:0c804970ing bin/installDeps.sh has already been run
Now I will try for 15 seconds to connect to Etherpad on http://localhost:9001
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
All relative paths will be interpreted relative to the identified Etherpad base dir: /home/travis/build/ether/[secure]
Random string used for versioning assets: c55e178b
[2020-07-26 01:10:22.065] [DEBUG] AbsolutePaths - Relative path "settings.json" can be rewritten to "/home/travis/build/ether/[secure]/settings.json"
[2020-07-26 01:10:22.066] [DEBUG] AbsolutePaths - Relative path "credentials.json" can be rewritten to "/home/travis/build/ether/[secure]/credentials.json"
settings loaded from: /home/travis/build/ether/[secure]/settings.json
No credentials file found in /home/travis/build/ether/[secure]/credentials.json. Ignoring.
[2020-07-26 01:10:22.096] [WARN] console - DirtyDB is used. This is fine for testing but not recommended for production. File location: /home/travis/build/ether/[secure]/var/dirty.db
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
[2020-07-26 01:10:23.424] [WARN] console - Can't get git version for server header
ENOENT: no such file or directory, open '/home/travis/build/ether/[secure]/.git/96200a74b845e538e685ab524324bd849f6'
[2020-07-26 01:10:23.424] [WARN] console - Can't get git version for server header
ENOENT: no such file or directory, open '/home/travis/build/ether/[secure]/.git/96200a74b845e538e685ab524324bd849f6'
[2020-07-26 01:10:23.649] [WARN] console - Admin username and password not set in settings.json.  To access admin please uncomment and edit 'users' in settings.json
[2020-07-26 01:10:23.652] [WARN] console - Etherpad is running in Development mode.  This mode is slower for users and less secure than production mode.  You should set the NODE_ENV environment variable to production by using: export NODE_ENV=production
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
bash: connect: Connection refused
bash: /dev/tcp/localhost/9001: Connection refused
Successfully connected to Etherpad on http://localhost:9001
Now starting the remote runner
Remote sauce test '291c596 - firefox 52.0, Windows 7' started! https://saucelabs.com/jobs/b93911627c4340bda60b400ab9cb6fba
Remote sauce test '291c596 - safari 13.1, OS X 10.15' started! https://saucelabs.com/jobs/de7e20b66fb1427cb8805db02f0d4bc0
Remote sauce test '291c596 - safari 12.0, OS X 10.14' started! https://saucelabs.com/jobs/014b75cbdfa64dbaab6e5b483de50d83
Remote sauce test '291c596 - chrome 55.0, Windows 7' started! https://saucelabs.com/jobs/baa464b93e404121b441a7bddd533315
Remote sauce test '291c596 - firefox 78.0, Windows 7' started! https://saucelabs.com/jobs/40363b584f914621ae3bbf4305895577
Remote sauce test '291c596 - microsoftedge 83.0, Windows 10' started! https://saucelabs.com/jobs/b1fdbcaf198f4741b58aa6fda32dfbb5
[2020-07-26 01:11:14.656] [WARN] message - Dropped message, disconnect happened in the mean time
[2020-07-26 01:11:37.504] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 165335,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 75597,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 165336,
      [Symbol(triggerId)]: 165335
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 165335,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 75597,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 165336,
      [Symbol(triggerId)]: 165335
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    'content-length': '146',
    accept: '*/*',
    origin: 'http://localhost:9001',
    'x-requested-with': 'XMLHttpRequest',
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'en-US,en;q=0.8',
    cookie: 'express_sid=s%3AXz5RYfq3N4OgOGmMzJDEJ63G18237DWJ.aSgVH8aeezbAIybCyKN1xcu9eJv5xZTVWQlepd8G5cc; token=t.lVfgfbg70WyZk9KBeEMH',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'baa464b93e404121b441a7bddd533315',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.89.38'
  },
  rawHeaders: [
    'Content-Length',
    '146',
    'Accept',
    '*/*',
    'Origin',
    'http://localhost:9001',
    'X-Requested-With',
    'XMLHttpRequest',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Accept-Encoding',
    'gzip, deflate, br',
    'Accept-Language',
    'en-US,en;q=0.8',
    'Cookie',
    'express_sid=s%3AXz5RYfq3N4OgOGmMzJDEJ63G18237DWJ.aSgVH8aeezbAIybCyKN1xcu9eJv5xZTVWQlepd8G5cc; token=t.lVfgfbg70WyZk9KBeEMH',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'baa464b93e404121b441a7bddd533315',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.89.38'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 165335,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 75597,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 165336,
      [Symbol(triggerId)]: 165335
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 165335,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 75597,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 165336,
        [Symbol(triggerId)]: 165335
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 165335,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 75597,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 165336,
        [Symbol(triggerId)]: 165335
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'Xz5RYfq3N4OgOGmMzJDEJ63G18237DWJ',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.lVfgfbg70WyZk9KBeEMH' },
  signedCookies: [Object: null prototype] {
    express_sid: 'Xz5RYfq3N4OgOGmMzJDEJ63G18237DWJ'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:47.571] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186676,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 85665,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186677,
      [Symbol(triggerId)]: 186676
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186676,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 85665,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186677,
      [Symbol(triggerId)]: 186676
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'x-requested-with': 'XMLHttpRequest',
    'content-length': '146',
    cookie: 'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.fqR3xkcFAz6jJo530OEn',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b93911627c4340bda60b400ab9cb6fba',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.53.112'
  },
  rawHeaders: [
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    'Accept',
    '*/*',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With',
    'XMLHttpRequest',
    'Content-Length',
    '146',
    'Cookie',
    'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.fqR3xkcFAz6jJo530OEn',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b93911627c4340bda60b400ab9cb6fba',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.53.112'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186676,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 85665,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186677,
      [Symbol(triggerId)]: 186676
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 186676,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 85665,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 186677,
        [Symbol(triggerId)]: 186676
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 186676,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 85665,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 186677,
        [Symbol(triggerId)]: 186676
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.fqR3xkcFAz6jJo530OEn' },
  signedCookies: [Object: null prototype] {
    express_sid: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:47.706] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186691,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [Timeout],
      _idleNext: [Timeout],
      _idleStart: 85748,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186692,
      [Symbol(triggerId)]: 186691
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186691,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [Timeout],
      _idleNext: [Timeout],
      _idleStart: 85748,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186692,
      [Symbol(triggerId)]: 186691
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'sec-fetch-site': 'same-origin',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with': 'XMLHttpRequest',
    'sec-fetch-mode': 'cors',
    cookie: 'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.YJp5igHpVrHU0iVkxiIR',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest': 'empty',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.73.176'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.9',
    'Accept-Encoding',
    'gzip, deflate, br',
    'sec-fetch-site',
    'same-origin',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with',
    'XMLHttpRequest',
    'sec-fetch-mode',
    'cors',
    'Cookie',
    'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.YJp5igHpVrHU0iVkxiIR',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest',
    'empty',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.73.176'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 186691,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [Timeout],
      _idleNext: [Timeout],
      _idleStart: 85748,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 186692,
      [Symbol(triggerId)]: 186691
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 186691,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 85748,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 186692,
        [Symbol(triggerId)]: 186691
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 186691,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [Timeout],
        _idleNext: [Timeout],
        _idleStart: 85748,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 186692,
        [Symbol(triggerId)]: 186691
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'ylS4crssnA32k_czAr8po6LritjiUTrG',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.YJp5igHpVrHU0iVkxiIR' },
  signedCookies: [Object: null prototype] {
    express_sid: 'ylS4crssnA32k_czAr8po6LritjiUTrG'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:49.267] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189596,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87361,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189597,
      [Symbol(triggerId)]: 189596
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189596,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87361,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189597,
      [Symbol(triggerId)]: 189596
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'sec-fetch-site': 'same-origin',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with': 'XMLHttpRequest',
    'sec-fetch-mode': 'cors',
    cookie: 'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.KDAqrPWFmgCYBodCOctg',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest': 'empty',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.73.176'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.9',
    'Accept-Encoding',
    'gzip, deflate, br',
    'sec-fetch-site',
    'same-origin',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with',
    'XMLHttpRequest',
    'sec-fetch-mode',
    'cors',
    'Cookie',
    'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.KDAqrPWFmgCYBodCOctg',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest',
    'empty',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.73.176'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 29,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189596,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87361,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189597,
      [Symbol(triggerId)]: 189596
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 189596,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 87361,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 189597,
        [Symbol(triggerId)]: 189596
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 189596,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 87361,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 189597,
        [Symbol(triggerId)]: 189596
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'ylS4crssnA32k_czAr8po6LritjiUTrG',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.KDAqrPWFmgCYBodCOctg' },
  signedCookies: [Object: null prototype] {
    express_sid: 'ylS4crssnA32k_czAr8po6LritjiUTrG'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:49.374] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189685,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87458,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189686,
      [Symbol(triggerId)]: 189685
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189685,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87458,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189686,
      [Symbol(triggerId)]: 189685
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'x-requested-with': 'XMLHttpRequest',
    'content-length': '146',
    cookie: 'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.0HK3LWNLMf8j1eDIOQzu',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b93911627c4340bda60b400ab9cb6fba',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.53.112'
  },
  rawHeaders: [
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    'Accept',
    '*/*',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With',
    'XMLHttpRequest',
    'Content-Length',
    '146',
    'Cookie',
    'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.0HK3LWNLMf8j1eDIOQzu',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b93911627c4340bda60b400ab9cb6fba',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.53.112'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 30,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 189685,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 87458,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 189686,
      [Symbol(triggerId)]: 189685
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 189685,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 87458,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 189686,
        [Symbol(triggerId)]: 189685
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 189685,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 87458,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 189686,
        [Symbol(triggerId)]: 189685
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.0HK3LWNLMf8j1eDIOQzu' },
  signedCookies: [Object: null prototype] {
    express_sid: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:51.012] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 192582,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89103,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 192583,
      [Symbol(triggerId)]: 192582
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 192582,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89103,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 192583,
      [Symbol(triggerId)]: 192582
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'sec-fetch-site': 'same-origin',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with': 'XMLHttpRequest',
    'sec-fetch-mode': 'cors',
    cookie: 'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.DBlC1z1mPbXwNHz1sfFa',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest': 'empty',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.73.176'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.9',
    'Accept-Encoding',
    'gzip, deflate, br',
    'sec-fetch-site',
    'same-origin',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.61 Safari/537.36 Edg/83.0.478.37',
    'x-requested-with',
    'XMLHttpRequest',
    'sec-fetch-mode',
    'cors',
    'Cookie',
    'express_sid=s%3AylS4crssnA32k_czAr8po6LritjiUTrG.16%2BVWmfg8GJsjJg3R5GbpJsqrKCT4tMhecGfrj4HlV4; token=t.DBlC1z1mPbXwNHz1sfFa',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'sec-fetch-dest',
    'empty',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b1fdbcaf198f4741b58aa6fda32dfbb5',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.73.176'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 192582,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89103,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 192583,
      [Symbol(triggerId)]: 192582
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 192582,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 89103,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 192583,
        [Symbol(triggerId)]: 192582
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 192582,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 89103,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 192583,
        [Symbol(triggerId)]: 192582
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'ylS4crssnA32k_czAr8po6LritjiUTrG',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.DBlC1z1mPbXwNHz1sfFa' },
  signedCookies: [Object: null prototype] {
    express_sid: 'ylS4crssnA32k_czAr8po6LritjiUTrG'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:51.643] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 193387,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89735,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 193388,
      [Symbol(triggerId)]: 193387
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 193387,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89735,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 193388,
      [Symbol(triggerId)]: 193387
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    accept: '*/*',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'x-requested-with': 'XMLHttpRequest',
    'content-length': '146',
    cookie: 'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.8en8K04W2gADpulaWKwH',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'b93911627c4340bda60b400ab9cb6fba',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.53.112'
  },
  rawHeaders: [
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0',
    'Accept',
    '*/*',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'X-Requested-With',
    'XMLHttpRequest',
    'Content-Length',
    '146',
    'Cookie',
    'express_sid=s%3AgHpzF6a6G_wkfEymtamIjVVzkaU_zvyf.CcWJTE9JHR%2FxXOLYBzW33GT95xWM2WOkFX7QmrDRdAY; token=t.8en8K04W2gADpulaWKwH',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'b93911627c4340bda60b400ab9cb6fba',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.53.112'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 28,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 193387,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 89735,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 193388,
      [Symbol(triggerId)]: 193387
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 193387,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 89735,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 193388,
        [Symbol(triggerId)]: 193387
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 193387,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 89735,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 193388,
        [Symbol(triggerId)]: 193387
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.8en8K04W2gADpulaWKwH' },
  signedCookies: [Object: null prototype] {
    express_sid: 'gHpzF6a6G_wkfEymtamIjVVzkaU_zvyf'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:11:58.779] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 206675,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 96871,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 206676,
      [Symbol(triggerId)]: 206675
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 206675,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 96871,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 206676,
      [Symbol(triggerId)]: 206675
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.h9FWpDlffTaozrGlGjHt',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '40363b584f914621ae3bbf4305895577',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.36.70'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.h9FWpDlffTaozrGlGjHt',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '40363b584f914621ae3bbf4305895577',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.36.70'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 31,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 206675,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 96871,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 206676,
      [Symbol(triggerId)]: 206675
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 206675,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 96871,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 206676,
        [Symbol(triggerId)]: 206675
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 206675,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 96871,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 206676,
        [Symbol(triggerId)]: 206675
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.h9FWpDlffTaozrGlGjHt' },
  signedCookies: [Object: null prototype] {
    express_sid: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:01.156] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 211944,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 99249,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 211945,
      [Symbol(triggerId)]: 211944
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 211944,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 99249,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 211945,
      [Symbol(triggerId)]: 211944
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.PthUPkWolNkNUJ510iNF',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '40363b584f914621ae3bbf4305895577',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.36.70'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.PthUPkWolNkNUJ510iNF',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '40363b584f914621ae3bbf4305895577',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.36.70'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 27,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 211944,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 99249,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 211945,
      [Symbol(triggerId)]: 211944
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 211944,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 99249,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 211945,
        [Symbol(triggerId)]: 211944
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 211944,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 99249,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 211945,
        [Symbol(triggerId)]: 211944
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.PthUPkWolNkNUJ510iNF' },
  signedCookies: [Object: null prototype] {
    express_sid: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:03.038] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 214514,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 101132,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 214515,
      [Symbol(triggerId)]: 214514
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 214514,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 101132,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 214515,
      [Symbol(triggerId)]: 214514
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-US,en;q=0.5',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.TKRbYHx3vFkou6dJe9oq',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '40363b584f914621ae3bbf4305895577',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.119.36.70'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-US,en;q=0.5',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'express_sid=s%3AdR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3.7mhsKi8hye3CdrPJGoB81UTFoDCnBcVXUCAsfpql9zg; token=t.TKRbYHx3vFkou6dJe9oq',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '40363b584f914621ae3bbf4305895577',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.119.36.70'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 26,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 214514,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 101132,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 214515,
      [Symbol(triggerId)]: 214514
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 214514,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 101132,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 214515,
        [Symbol(triggerId)]: 214514
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 214514,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 101132,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 214515,
        [Symbol(triggerId)]: 214514
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.TKRbYHx3vFkou6dJe9oq' },
  signedCookies: [Object: null prototype] {
    express_sid: 'dR-9v4_ZWRYR2iylgwx7wBLZJdj2u-B3'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:41.379] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 251507,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 139471,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 251508,
      [Symbol(triggerId)]: 251507
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 251507,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 139471,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 251508,
      [Symbol(triggerId)]: 251507
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    cookie: 'token=t.tF84VH1QYhUdH7dxl755; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with': 'XMLHttpRequest',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'de7e20b66fb1427cb8805db02f0d4bc0',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.13.167'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    'Cookie',
    'token=t.tF84VH1QYhUdH7dxl755; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with',
    'XMLHttpRequest',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'de7e20b66fb1427cb8805db02f0d4bc0',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.13.167'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 23,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 251507,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 139471,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 251508,
      [Symbol(triggerId)]: 251507
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 251507,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 139471,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 251508,
        [Symbol(triggerId)]: 251507
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 251507,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 139471,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 251508,
        [Symbol(triggerId)]: 251507
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.tF84VH1QYhUdH7dxl755' },
  signedCookies: [Object: null prototype] {
    express_sid: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:44.372] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 253764,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 142465,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 253765,
      [Symbol(triggerId)]: 253764
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 253764,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 142465,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 253765,
      [Symbol(triggerId)]: 253764
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    cookie: 'token=t.C884frVpzM5ecGok1dqn; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with': 'XMLHttpRequest',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'de7e20b66fb1427cb8805db02f0d4bc0',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.13.167'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    'Cookie',
    'token=t.C884frVpzM5ecGok1dqn; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with',
    'XMLHttpRequest',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'de7e20b66fb1427cb8805db02f0d4bc0',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.13.167'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 253764,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 142465,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 253765,
      [Symbol(triggerId)]: 253764
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 253764,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 142465,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 253765,
        [Symbol(triggerId)]: 253764
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 253764,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 142465,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 253765,
        [Symbol(triggerId)]: 253764
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.C884frVpzM5ecGok1dqn' },
  signedCookies: [Object: null prototype] {
    express_sid: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:45.360] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 254379,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 143454,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 254380,
      [Symbol(triggerId)]: 254379
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 254379,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 143454,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 254380,
      [Symbol(triggerId)]: 254379
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    dnt: '1',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'token=t.VqrzVfBDWAXy2E5hEqxf; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '014b75cbdfa64dbaab6e5b483de50d83',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.4.173'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    'dnt',
    '1',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'token=t.VqrzVfBDWAXy2E5hEqxf; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '014b75cbdfa64dbaab6e5b483de50d83',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.4.173'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 21,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 254379,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 143454,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 254380,
      [Symbol(triggerId)]: 254379
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 254379,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 143454,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 254380,
        [Symbol(triggerId)]: 254379
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 254379,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 143454,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 254380,
        [Symbol(triggerId)]: 254379
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.VqrzVfBDWAXy2E5hEqxf' },
  signedCookies: [Object: null prototype] {
    express_sid: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:47.353] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 255988,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 145447,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 255989,
      [Symbol(triggerId)]: 255988
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 255988,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 145447,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 255989,
      [Symbol(triggerId)]: 255988
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    cookie: 'token=t.9buyAiXI1aNn2B8zMjsz; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with': 'XMLHttpRequest',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': 'de7e20b66fb1427cb8805db02f0d4bc0',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.13.167'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15',
    'Cookie',
    'token=t.9buyAiXI1aNn2B8zMjsz; express_sid=s%3AhiFbSRmY5slBB5LxM7WxoxxlONYMEy5G.%2FL8EfjQwJzAQavbKGwLjwLS%2BOknPBHeKVIMhtPJKweI',
    'x-requested-with',
    'XMLHttpRequest',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    'de7e20b66fb1427cb8805db02f0d4bc0',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.13.167'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 255988,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 145447,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 255989,
      [Symbol(triggerId)]: 255988
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 255988,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 145447,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 255989,
        [Symbol(triggerId)]: 255988
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 255988,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 145447,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 255989,
        [Symbol(triggerId)]: 255988
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.9buyAiXI1aNn2B8zMjsz' },
  signedCookies: [Object: null prototype] {
    express_sid: 'hiFbSRmY5slBB5LxM7WxoxxlONYMEy5G'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:48.528] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 256668,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 146622,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 256669,
      [Symbol(triggerId)]: 256668
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 256668,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 146622,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 256669,
      [Symbol(triggerId)]: 256668
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    dnt: '1',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'token=t.tbTvz5SJ2svusbr0dYRC; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '014b75cbdfa64dbaab6e5b483de50d83',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.4.173'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    'dnt',
    '1',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'token=t.tbTvz5SJ2svusbr0dYRC; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '014b75cbdfa64dbaab6e5b483de50d83',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.4.173'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 20,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 256668,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 146622,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 256669,
      [Symbol(triggerId)]: 256668
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 256668,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 146622,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 256669,
        [Symbol(triggerId)]: 256668
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 256668,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 146622,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 256669,
        [Symbol(triggerId)]: 256668
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.tbTvz5SJ2svusbr0dYRC' },
  signedCookies: [Object: null prototype] {
    express_sid: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[2020-07-26 01:12:51.865] [WARN] console - connection-diagnostic-info: IncomingMessage {
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrainWriters: null,
    multiAwaitDrain: false,
    readingMore: true,
    decoder: null,
    encoding: null,
    [Symbol(kPaused)]: null
  },
  readable: true,
  _events: [Object: null prototype] {
    end: [Function: resetHeadersTimeoutOnReqEnd]
  },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 258979,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 149957,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 258980,
      [Symbol(triggerId)]: 258979
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  connection: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 258979,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 149957,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 258980,
      [Symbol(triggerId)]: 258979
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: {
    origin: 'http://localhost:9001',
    'accept-language': 'en-us',
    'accept-encoding': 'gzip, deflate',
    accept: '*/*',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    dnt: '1',
    'x-requested-with': 'XMLHttpRequest',
    cookie: 'token=t.m9SirM43z5j8iGG8Zdyk; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
    'content-length': '146',
    host: 'localhost:9001',
    via: '1.1 maki2065 (squid/4.6)',
    'cache-control': 'max-age=0',
    connection: 'keep-alive',
    'x-sl-job-id': '014b75cbdfa64dbaab6e5b483de50d83',
    'x-sl-tunnel-id': 'e09eccaf83264045b17a8c0cc49aee02',
    'x-sl-chef-ip': '10.125.4.173'
  },
  rawHeaders: [
    'Origin',
    'http://localhost:9001',
    'Accept-Language',
    'en-us',
    'Accept-Encoding',
    'gzip, deflate',
    'Accept',
    '*/*',
    'User-Agent',
    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Safari/605.1.15',
    'dnt',
    '1',
    'x-requested-with',
    'XMLHttpRequest',
    'Cookie',
    'token=t.m9SirM43z5j8iGG8Zdyk; express_sid=s%3AC0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF.z50sWdqUshGvIr7zWN4MYJP88P44CxdgGgB3XNvDfQs',
    'Content-Type',
    'application/x-www-form-urlencoded; charset=UTF-8',
    'Content-Length',
    '146',
    'Host',
    'localhost:9001',
    'Via',
    '1.1 maki2065 (squid/4.6)',
    'Cache-Control',
    'max-age=0',
    'Connection',
    'keep-alive',
    'X-SL-Job-ID',
    '014b75cbdfa64dbaab6e5b483de50d83',
    'X-SL-Tunnel-ID',
    'e09eccaf83264045b17a8c0cc49aee02',
    'X-SL-Chef-IP',
    '10.125.4.173'
  ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/ep/pad/connection-diagnostic-info',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _readableState: ReadableState {
      objectMode: false,
      highWaterMark: 16384,
      buffer: BufferList { head: null, tail: null, length: 0 },
      length: 0,
      pipes: null,
      pipesCount: 0,
      flowing: true,
      ended: false,
      endEmitted: false,
      reading: true,
      sync: false,
      needReadable: true,
      emittedReadable: false,
      readableListening: false,
      resumeScheduled: false,
      emitClose: false,
      autoDestroy: false,
      destroyed: false,
      defaultEncoding: 'utf8',
      awaitDrainWriters: null,
      multiAwaitDrain: false,
      readingMore: false,
      decoder: null,
      encoding: null,
      [Symbol(kPaused)]: false
    },
    readable: true,
    _events: [Object: null prototype] {
      end: [Array],
      timeout: [Function: socketOnTimeout],
      data: [Function: bound socketOnData],
      error: [Function: socketOnError],
      close: [Array],
      drain: [Function: bound socketOnDrain],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _eventsCount: 8,
    _maxListeners: undefined,
    _writableState: WritableState {
      objectMode: false,
      highWaterMark: 16384,
      finalCalled: false,
      needDrain: false,
      ending: false,
      ended: false,
      finished: false,
      destroyed: false,
      decodeStrings: false,
      defaultEncoding: 'utf8',
      length: 0,
      writing: false,
      corked: 0,
      sync: true,
      bufferProcessing: false,
      onwrite: [Function: bound onwrite],
      writecb: null,
      writelen: 0,
      afterWriteTickInfo: null,
      bufferedRequest: null,
      lastBufferedRequest: null,
      pendingcb: 0,
      prefinished: false,
      errorEmitted: false,
      emitClose: false,
      autoDestroy: false,
      bufferedRequestCount: 0,
      corkedRequestsFree: [Object]
    },
    writable: true,
    allowHalfOpen: true,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    _server: Server {
      insecureHTTPParser: undefined,
      _events: [Object: null prototype],
      _eventsCount: 5,
      _maxListeners: undefined,
      _connections: 22,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      allowHalfOpen: true,
      pauseOnConnect: false,
      httpAllowHalfOpen: false,
      timeout: 120000,
      keepAliveTimeout: 5000,
      maxHeadersCount: null,
      headersTimeout: 60000,
      _connectionKey: '4:0.0.0.0:9001',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(kCapture)]: false,
      [Symbol(asyncId)]: 39227
    },
    timeout: 120000,
    parser: HTTPParser {
      '0': [Function: parserOnHeaders],
      '1': [Function: parserOnHeadersComplete],
      '2': [Function: parserOnBody],
      '3': [Function: parserOnMessageComplete],
      '4': [Function: bound onParserExecute],
      _headers: [],
      _url: '',
      socket: [Circular],
      incoming: [Circular],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      parsingHeadersStart: 0,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    _paused: false,
    _httpMessage: ServerResponse {
      _events: [Object: null prototype],
      _eventsCount: 1,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: true,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      _contentLength: null,
      _hasBody: true,
      _trailer: '',
      finished: false,
      _headerSent: false,
      socket: [Circular],
      connection: [Circular],
      _header: null,
      _onPendingData: [Function: bound updateOutgoingData],
      _sent100: false,
      _expect_continue: false,
      req: [Circular],
      locals: [Object: null prototype] {},
      send: [Function],
      writeHead: [Function: writeHead],
      end: [Function: end],
      [Symbol(kCapture)]: false,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype]
    },
    [Symbol(asyncId)]: 258979,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular]
    },
    [Symbol(kSetNoDelay)]: false,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: Timeout {
      _idleTimeout: 120000,
      _idlePrev: [TimersList],
      _idleNext: [Timeout],
      _idleStart: 149957,
      _onTimeout: [Function: bound ],
      _timerArgs: undefined,
      _repeat: null,
      _destroyed: false,
      [Symbol(refed)]: false,
      [Symbol(asyncId)]: 258980,
      [Symbol(triggerId)]: 258979
    },
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/ep/pad/connection-diagnostic-info',
  _parsedUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  params: {},
  query: {},
  res: ServerResponse {
    _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 258979,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 149957,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 258980,
        [Symbol(triggerId)]: 258979
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _readableState: [ReadableState],
      readable: true,
      _events: [Object: null prototype],
      _eventsCount: 8,
      _maxListeners: undefined,
      _writableState: [WritableState],
      writable: true,
      allowHalfOpen: true,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      timeout: 120000,
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      _paused: false,
      _httpMessage: [Circular],
      [Symbol(asyncId)]: 258979,
      [Symbol(kHandle)]: [TCP],
      [Symbol(kSetNoDelay)]: false,
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 120000,
        _idlePrev: [TimersList],
        _idleNext: [Timeout],
        _idleStart: 149957,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(asyncId)]: 258980,
        [Symbol(triggerId)]: 258979
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: [Circular],
    locals: [Object: null prototype] {},
    send: [Function],
    writeHead: [Function: writeHead],
    end: [Function: end],
    [Symbol(kCapture)]: false,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      'x-powered-by': [Array],
      'x-ua-compatible': [Array],
      'referrer-policy': [Array]
    }
  },
  _parsedOriginalUrl: Url {
    protocol: null,
    slashes: null,
    auth: null,
    host: null,
    port: null,
    hostname: null,
    hash: null,
    search: null,
    query: null,
    pathname: '/ep/pad/connection-diagnostic-info',
    path: '/ep/pad/connection-diagnostic-info',
    href: '/ep/pad/connection-diagnostic-info',
    _raw: '/ep/pad/connection-diagnostic-info'
  },
  sessionStore: SessionStore {
    generate: [Function],
    _events: [Object: null prototype] {
      disconnect: [Function: ondisconnect],
      connect: [Function: onconnect]
    },
    _eventsCount: 2
  },
  sessionID: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF',
  session: Session {
    cookie: {
      path: '/',
      _expires: undefined,
      originalMaxAge: null,
      httpOnly: true,
      sameSite: 'Lax',
      secure: false
    }
  },
  secret: '933626025dd4821cc9b4e71d02aac7e99d88793787529b72d07cbdb03a6be75a',
  cookies: { token: 't.m9SirM43z5j8iGG8Zdyk' },
  signedCookies: [Object: null prototype] {
    express_sid: 'C0bgS-LtiQx9q2K4YPBLToA7ivN5-DAF'
  },
  route: Route {
    path: '/ep/pad/connection-diagnostic-info',
    stack: [ [Layer] ],
    methods: { post: true }
  },
  [Symbol(kCapture)]: false
}
[chrome Windows 7 55.0] alphabet.js
[chrome Windows 7 55.0]   All the alphabet works n stuff
[chrome Windows 7 55.0]     -> PASSED : when you enter any char it appears right   53 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] authorship_of_editions.js
[chrome Windows 7 55.0]   author of pad edition
[chrome Windows 7 55.0]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[chrome Windows 7 55.0]     e
[chrome Windows 7 55.0]     -> PENDING: marks only the new content as changes of the second user on a line with o
[chrome Windows 7 55.0]     rdered list
[chrome Windows 7 55.0]     -> PENDING: marks only the new content as changes of the second user on a line with u
[chrome Windows 7 55.0]     nordered list
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] bold.js
[chrome Windows 7 55.0]   bold button
[chrome Windows 7 55.0]     -> PASSED : makes text bold on click   37 ms
[chrome Windows 7 55.0]     -> PASSED : makes text bold on keypress   18 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] change_user_color.js
[chrome Windows 7 55.0]   change user color
[chrome Windows 7 55.0]     -> PENDING: Color picker matches original color and remembers the user color after a 
[chrome Windows 7 55.0]     refresh
[chrome Windows 7 55.0]     -> PENDING: Own user color is shown when you enter a chat
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] change_user_name.js
[chrome Windows 7 55.0]   change username value
[chrome Windows 7 55.0]     -> PENDING: Remembers the user name after a refresh
[chrome Windows 7 55.0]     -> PENDING: Own user name is shown when you enter a chat
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] chat.js
[chrome Windows 7 55.0]   Chat messages and UI
[chrome Windows 7 55.0]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[chrome Windows 7 55.0]     -> PENDING: makes sure that an empty message can't be sent
[chrome Windows 7 55.0]     -> PENDING: makes chat stick to right side of the screen
[chrome Windows 7 55.0]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[chrome Windows 7 55.0]     er
[chrome Windows 7 55.0]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[chrome Windows 7 55.0]      chat
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] chat_load_messages.js
[chrome Windows 7 55.0]   chat-load-messages
[chrome Windows 7 55.0]     -> PENDING: creates a pad
[chrome Windows 7 55.0]     -> PENDING: adds a lot of messages
[chrome Windows 7 55.0]     -> PENDING: checks initial message count
[chrome Windows 7 55.0]     -> PENDING: loads more messages
[chrome Windows 7 55.0]     -> PENDING: checks for button vanishing
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] clear_authorship_colors.js
[chrome Windows 7 55.0]   clear authorship colors button
[chrome Windows 7 55.0]     -> PASSED : makes text clear authorship colors   49 ms
[chrome Windows 7 55.0]     -> PASSED : makes text clear authorship colors and checks it can't be undone   40 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] delete.js
[chrome Windows 7 55.0]   delete keystroke
[chrome Windows 7 55.0]     -> PENDING: makes text delete
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] drag_and_drop.js
[chrome Windows 7 55.0]   drag and drop
[chrome Windows 7 55.0]     when user drags part of one line and drops it far form its original place
[chrome Windows 7 55.0]       and user triggers UNDO
[chrome Windows 7 55.0]         -> PASSED : moves text back to its original place   1 ms
[chrome Windows 7 55.0]     when user drags some lines far form its original place
[chrome Windows 7 55.0]       and user triggers UNDO
[chrome Windows 7 55.0]         -> PASSED : moves text back to its original place   1 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] embed_value.js
[chrome Windows 7 55.0]   embed links
[chrome Windows 7 55.0]     read and write
[chrome Windows 7 55.0]       the share link
[chrome Windows 7 55.0]         -> PASSED : is the actual pad url   13 ms
[chrome Windows 7 55.0]       the embed as iframe code
[chrome Windows 7 55.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   13 ms
[chrome Windows 7 55.0]     when read only option is set
[chrome Windows 7 55.0]       the share link
[chrome Windows 7 55.0]         -> PASSED : shows a read only url   12 ms
[chrome Windows 7 55.0]       the embed as iframe code
[chrome Windows 7 55.0]         -> FAILED : "before each" hook for "is an iframe with the the correct url parameters and
[chrome Windows 7 55.0]          correct size" Error: Uncaught Error: Pad never loaded (http://localhost:9001/tests/frontend/helper.
[chrome Windows 7 55.0]         js:143)
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] enter.js
[chrome Windows 7 55.0]   enter keystroke
[chrome Windows 7 55.0]     -> PASSED : creates a new line & puts cursor onto a new line   23 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] font_type.js
[chrome Windows 7 55.0]   font select
[chrome Windows 7 55.0]     -> PENDING: makes text RobotoMono
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] helper.js
[chrome Windows 7 55.0]   the test helper
[chrome Windows 7 55.0]     the newPad method
[chrome Windows 7 55.0]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[chrome Windows 7 55.0]       -> PASSED : gives me 3 jquery instances of chrome, outer and inner   1289 ms
[chrome Windows 7 55.0]       -> PASSED : clears cookies   3464 ms
[chrome Windows 7 55.0]       -> PASSED : sets pad prefs cookie   1316 ms
[chrome Windows 7 55.0]     the waitFor method
[chrome Windows 7 55.0]       -> PASSED : takes a timeout and waits long enough   1502 ms
[chrome Windows 7 55.0]       -> PASSED : takes an interval and checks on every interval   2011 ms
[chrome Windows 7 55.0]       returns a deferred object
[chrome Windows 7 55.0]         -> PASSED : it calls done after success   16 ms
[chrome Windows 7 55.0]         -> PASSED : calls fail after failure   1901 ms
[chrome Windows 7 55.0]         -> PENDING: throws if you don't listen for fails
[chrome Windows 7 55.0]     the selectLines method
[chrome Windows 7 55.0]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[chrome Windows 7 55.0]       fset of $endLine   6 ms
[chrome Windows 7 55.0]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   1 ms
[chrome Windows 7 55.0]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   0 ms
[chrome Windows 7 55.0]       -> PASSED : selects full line when offset is longer than line content   0 ms
[chrome Windows 7 55.0]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[chrome Windows 7 55.0]       no offset is provided   0 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] importexport.js
[chrome Windows 7 55.0]   import functionality
[chrome Windows 7 55.0]     -> PENDING: import a pad with newlines from txt
[chrome Windows 7 55.0]     -> PENDING: import a pad with newlines from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with attributes from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with bullets from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with bullets and newlines from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with bullets and newlines and attributes from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with nested bullets from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[chrome Windows 7 55.0]     ml
[chrome Windows 7 55.0]     -> PENDING: import a pad with ordered lists from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with ordered lists and newlines from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[chrome Windows 7 55.0]     tml
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] importindents.js
[chrome Windows 7 55.0]   import indents functionality
[chrome Windows 7 55.0]     -> PENDING: import a pad with indents from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with indented lists and newlines from html
[chrome Windows 7 55.0]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[chrome Windows 7 55.0]     ml
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] indentation.js
[chrome Windows 7 55.0]   indentation button
[chrome Windows 7 55.0]     -> PASSED : indent text with keypress   23 ms
[chrome Windows 7 55.0]     -> PASSED : indent text with button   28 ms
[chrome Windows 7 55.0]     -> PASSED : keeps the indent on enter for the new line   46 ms
[chrome Windows 7 55.0]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[chrome Windows 7 55.0]     , or '{'   92 ms
[chrome Windows 7 55.0]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[chrome Windows 7 55.0]     ith ':', '[', '(', or '{'   50 ms
[chrome Windows 7 55.0]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[chrome Windows 7 55.0]      outdented   118 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] italic.js
[chrome Windows 7 55.0]   italic some text
[chrome Windows 7 55.0]     -> PENDING: makes text italic using button
[chrome Windows 7 55.0]     -> PENDING: makes text italic using keypress
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] language.js
[chrome Windows 7 55.0]   Language select and change
[chrome Windows 7 55.0]     -> PASSED : makes text german   175 ms
[chrome Windows 7 55.0]     -> PASSED : makes text English   31 ms
[chrome Windows 7 55.0]     -> PASSED : changes direction when picking an rtl lang   295 ms
[chrome Windows 7 55.0]     -> PASSED : changes direction when picking an ltr lang   34 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] multiple_authors_clear_authorship_colors.js
[chrome Windows 7 55.0]   author of pad edition
[chrome Windows 7 55.0]     -> PENDING: Clears Authorship by second user
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] ordered_list.js
[chrome Windows 7 55.0]   assign ordered list
[chrome Windows 7 55.0]     -> PASSED : inserts ordered list text   28 ms
[chrome Windows 7 55.0]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[chrome Windows 7 55.0]     PASTING INTO A PAD
[chrome Windows 7 55.0]     when user presses Ctrl+Shift+N
[chrome Windows 7 55.0]       and pad shortcut is enabled
[chrome Windows 7 55.0]         -> PASSED : inserts unordered list   39 ms
[chrome Windows 7 55.0]       and pad shortcut is disabled
[chrome Windows 7 55.0]         -> PASSED : does not insert unordered list   1901 ms
[chrome Windows 7 55.0]     when user presses Ctrl+Shift+1
[chrome Windows 7 55.0]       and pad shortcut is enabled
[chrome Windows 7 55.0]         -> PASSED : inserts unordered list   10 ms
[chrome Windows 7 55.0]       and pad shortcut is disabled
[chrome Windows 7 55.0]         -> PASSED : does not insert unordered list   1900 ms
[chrome Windows 7 55.0]   Pressing Tab in an OL increases and decreases indentation
[chrome Windows 7 55.0]     -> PASSED : indent and de-indent list item with keypress   96 ms
[chrome Windows 7 55.0]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[chrome Windows 7 55.0]   ng
[chrome Windows 7 55.0]     -> PASSED : indent and de-indent list item with indent button   45 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] pad_modal.js
[chrome Windows 7 55.0]   Pad modal
[chrome Windows 7 55.0]     when modal is a "force reconnect" message
[chrome Windows 7 55.0]       -> PASSED : disables editor   2 ms
[chrome Windows 7 55.0]       and user clicks on editor
[chrome Windows 7 55.0]         -> PASSED : does not close the modal   2 ms
[chrome Windows 7 55.0]       and user clicks on pad outer
[chrome Windows 7 55.0]         -> PASSED : does not close the modal   2 ms
[chrome Windows 7 55.0]     when modal is not an error message
[chrome Windows 7 55.0]       and user clicks on editor
[chrome Windows 7 55.0]         -> PASSED : closes the modal   2 ms
[chrome Windows 7 55.0]       and user clicks on pad outer
[chrome Windows 7 55.0]         -> PASSED : closes the modal   2 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] redo.js
[chrome Windows 7 55.0]   undo button then redo button
[chrome Windows 7 55.0]     -> PASSED : redo some typing with button   65 ms
[chrome Windows 7 55.0]     -> PASSED : redo some typing with keypress   35 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] responsiveness.js
[chrome Windows 7 55.0]   Responsiveness of Editor
[chrome Windows 7 55.0]     -> PENDING: Fast response to keypress in pad with large amount of contents
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] select_formatting_buttons.js
[chrome Windows 7 55.0]   select formatting buttons when selection has style applied
[chrome Windows 7 55.0]     when selection is in a text with italic applied
[chrome Windows 7 55.0]       -> PENDING: selects the italic button
[chrome Windows 7 55.0]     when caret is in a position with italic applied
[chrome Windows 7 55.0]       -> PENDING: selects the italic button
[chrome Windows 7 55.0]     when selection is in a text with bold applied
[chrome Windows 7 55.0]       -> PENDING: selects the bold button
[chrome Windows 7 55.0]     when caret is in a position with bold applied
[chrome Windows 7 55.0]       -> PENDING: selects the bold button
[chrome Windows 7 55.0]     when selection is in a text with underline applied
[chrome Windows 7 55.0]       -> PENDING: selects the underline button
[chrome Windows 7 55.0]     when caret is in a position with underline applied
[chrome Windows 7 55.0]       -> PENDING: selects the underline button
[chrome Windows 7 55.0]     when selection is in a text with strikethrough applied
[chrome Windows 7 55.0]       -> PENDING: selects the strikethrough button
[chrome Windows 7 55.0]     when caret is in a position with strikethrough applied
[chrome Windows 7 55.0]       -> PENDING: selects the strikethrough button
[chrome Windows 7 55.0]     when user applies a style and the selection does not change
[chrome Windows 7 55.0]       -> PENDING: selects the style button
[chrome Windows 7 55.0]     when user presses CMD + I
[chrome Windows 7 55.0]       -> PENDING: selects the italic button
[chrome Windows 7 55.0]       and user presses CMD + I again
[chrome Windows 7 55.0]         -> PENDING: deselects the italic button
[chrome Windows 7 55.0]     when user presses CMD + B
[chrome Windows 7 55.0]       -> PENDING: selects the bold button
[chrome Windows 7 55.0]       and user presses CMD + B again
[chrome Windows 7 55.0]         -> PENDING: deselects the bold button
[chrome Windows 7 55.0]     when user presses CMD + U
[chrome Windows 7 55.0]       -> PENDING: selects the underline button
[chrome Windows 7 55.0]       and user presses CMD + U again
[chrome Windows 7 55.0]         -> PENDING: deselects the underline button
[chrome Windows 7 55.0]     when user presses CMD + 5
[chrome Windows 7 55.0]       -> PENDING: selects the strikethrough button
[chrome Windows 7 55.0]       and user presses CMD + 5 again
[chrome Windows 7 55.0]         -> PENDING: deselects the strikethrough button
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] strikethrough.js
[chrome Windows 7 55.0]   strikethrough button
[chrome Windows 7 55.0]     -> PASSED : makes text strikethrough   23 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] timeslider.js
[chrome Windows 7 55.0]   timeslider button takes you to the timeslider of a pad
[chrome Windows 7 55.0]     -> PENDING: timeslider contained in URL
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] timeslider_follow.js
[chrome Windows 7 55.0]   timeslider
[chrome Windows 7 55.0]     -> PASSED : follow content as it's added to timeslider   12014 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] timeslider_labels.js
[chrome Windows 7 55.0]   timeslider
[chrome Windows 7 55.0]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[chrome Windows 7 55.0]     NaN
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] timeslider_numeric_padID.js
[chrome Windows 7 55.0]   timeslider
[chrome Windows 7 55.0]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   445
[chrome Windows 7 55.0]     0 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] timeslider_revisions.js
[chrome Windows 7 55.0]   timeslider
[chrome Windows 7 55.0]     -> PASSED : loads adds a hundred revisions   96122 ms
[chrome Windows 7 55.0]     -> PENDING: changes the url when clicking on the timeslider
[chrome Windows 7 55.0]     -> PASSED : jumps to a revision given in the url   2174 ms
[chrome Windows 7 55.0]     -> PASSED : checks the export url   3370 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] undo.js
[chrome Windows 7 55.0]   undo button
[chrome Windows 7 55.0]     -> PENDING: undo some typing by clicking undo button
[chrome Windows 7 55.0]     -> PENDING: undo some typing using a keypress
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] unordered_list.js
[chrome Windows 7 55.0]   assign unordered list
[chrome Windows 7 55.0]     -> PENDING: insert unordered list text then removes by outdent
[chrome Windows 7 55.0]   unassign unordered list
[chrome Windows 7 55.0]     -> PASSED : insert unordered list text then remove by clicking list again   86 ms
[chrome Windows 7 55.0]   keep unordered list on enter key
[chrome Windows 7 55.0]     -> PASSED : Keeps the unordered list on enter for the new line   582 ms
[chrome Windows 7 55.0]   Pressing Tab in an UL increases and decreases indentation
[chrome Windows 7 55.0]     -> PASSED : indent and de-indent list item with keypress   77 ms
[chrome Windows 7 55.0]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[chrome Windows 7 55.0]   ng
[chrome Windows 7 55.0]     -> PASSED : indent and de-indent list item with indent button   52 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] urls_become_clickable.js
[chrome Windows 7 55.0]   urls
[chrome Windows 7 55.0]     -> PASSED : when you enter an url, it becomes clickable   537 ms
[chrome Windows 7 55.0]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[chrome Windows 7 55.0]      whole URL   63 ms
[chrome Windows 7 55.0]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   5
[chrome Windows 7 55.0]     24 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] xxauto_reconnect.js
[chrome Windows 7 55.0]   Automatic pad reload on Force Reconnect message
[chrome Windows 7 55.0]     -> PASSED : displays a count down timer to automatically reconnect   4 ms
[chrome Windows 7 55.0]     and user clicks on Cancel
[chrome Windows 7 55.0]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" Error
[chrome Windows 7 55.0]       : is this caught?
[chrome Windows 7 55.0]           at Context.<anonymous> (<anonymous>:38:11)
[chrome Windows 7 55.0]     and user does not click on Cancel until timer expires
[chrome Windows 7 55.0]       -> PASSED : reloads the pad   2680 ms
[chrome Windows 7 55.0] 
[chrome Windows 7 55.0] FINISHED - 62 tests passed, 2 tests failed, 63  pending, duration: 3:35
[chrome Windows 7 55.0] 
Remote sauce test '291c596 - chrome 55.0, Windows 7' finished! https://saucelabs.com/jobs/baa464b93e404121b441a7bddd533315
[firefox Windows 7 52.0] alphabet.js
[firefox Windows 7 52.0]   All the alphabet works n stuff
[firefox Windows 7 52.0]     -> PASSED : when you enter any char it appears right   52 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] authorship_of_editions.js
[firefox Windows 7 52.0]   author of pad edition
[firefox Windows 7 52.0]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[firefox Windows 7 52.0]     e
[firefox Windows 7 52.0]     -> PENDING: marks only the new content as changes of the second user on a line with o
[firefox Windows 7 52.0]     rdered list
[firefox Windows 7 52.0]     -> PENDING: marks only the new content as changes of the second user on a line with u
[firefox Windows 7 52.0]     nordered list
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] bold.js
[firefox Windows 7 52.0]   bold button
[firefox Windows 7 52.0]     -> PASSED : makes text bold on click   28 ms
[firefox Windows 7 52.0]     -> PASSED : makes text bold on keypress   20 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] change_user_color.js
[firefox Windows 7 52.0]   change user color
[firefox Windows 7 52.0]     -> PENDING: Color picker matches original color and remembers the user color after a 
[firefox Windows 7 52.0]     refresh
[firefox Windows 7 52.0]     -> PENDING: Own user color is shown when you enter a chat
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] change_user_name.js
[firefox Windows 7 52.0]   change username value
[firefox Windows 7 52.0]     -> PENDING: Remembers the user name after a refresh
[firefox Windows 7 52.0]     -> PENDING: Own user name is shown when you enter a chat
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] chat.js
[firefox Windows 7 52.0]   Chat messages and UI
[firefox Windows 7 52.0]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[firefox Windows 7 52.0]     -> PENDING: makes sure that an empty message can't be sent
[firefox Windows 7 52.0]     -> PENDING: makes chat stick to right side of the screen
[firefox Windows 7 52.0]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[firefox Windows 7 52.0]     er
[firefox Windows 7 52.0]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[firefox Windows 7 52.0]      chat
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] chat_load_messages.js
[firefox Windows 7 52.0]   chat-load-messages
[firefox Windows 7 52.0]     -> PENDING: creates a pad
[firefox Windows 7 52.0]     -> PENDING: adds a lot of messages
[firefox Windows 7 52.0]     -> PENDING: checks initial message count
[firefox Windows 7 52.0]     -> PENDING: loads more messages
[firefox Windows 7 52.0]     -> PENDING: checks for button vanishing
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] clear_authorship_colors.js
[firefox Windows 7 52.0]   clear authorship colors button
[firefox Windows 7 52.0]     -> PASSED : makes text clear authorship colors   65 ms
[firefox Windows 7 52.0]     -> PASSED : makes text clear authorship colors and checks it can't be undone   78 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] delete.js
[firefox Windows 7 52.0]   delete keystroke
[firefox Windows 7 52.0]     -> PENDING: makes text delete
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] drag_and_drop.js
[firefox Windows 7 52.0]   drag and drop
[firefox Windows 7 52.0]     when user drags part of one line and drops it far form its original place
[firefox Windows 7 52.0]       and user triggers UNDO
[firefox Windows 7 52.0]         -> PASSED : moves text back to its original place   2 ms
[firefox Windows 7 52.0]     when user drags some lines far form its original place
[firefox Windows 7 52.0]       and user triggers UNDO
[firefox Windows 7 52.0]         -> PASSED : moves text back to its original place   2 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] embed_value.js
[firefox Windows 7 52.0]   embed links
[firefox Windows 7 52.0]     read and write
[firefox Windows 7 52.0]       the share link
[firefox Windows 7 52.0]         -> PASSED : is the actual pad url   23 ms
[firefox Windows 7 52.0]       the embed as iframe code
[firefox Windows 7 52.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   21 ms
[firefox Windows 7 52.0]     when read only option is set
[firefox Windows 7 52.0]       the share link
[firefox Windows 7 52.0]         -> PASSED : shows a read only url   16 ms
[firefox Windows 7 52.0]       the embed as iframe code
[firefox Windows 7 52.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   19 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] enter.js
[firefox Windows 7 52.0]   enter keystroke
[firefox Windows 7 52.0]     -> PASSED : creates a new line & puts cursor onto a new line   38 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] font_type.js
[firefox Windows 7 52.0]   font select
[firefox Windows 7 52.0]     -> PENDING: makes text RobotoMono
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] helper.js
[firefox Windows 7 52.0]   the test helper
[firefox Windows 7 52.0]     the newPad method
[firefox Windows 7 52.0]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[firefox Windows 7 52.0]       -> PASSED : gives me 3 jquery instances of chrome, outer and inner   1881 ms
[firefox Windows 7 52.0]       -> PASSED : clears cookies   3837 ms
[firefox Windows 7 52.0]       -> PASSED : sets pad prefs cookie   1574 ms
[firefox Windows 7 52.0]     the waitFor method
[firefox Windows 7 52.0]       -> PASSED : takes a timeout and waits long enough   1508 ms
[firefox Windows 7 52.0]       -> PASSED : takes an interval and checks on every interval   2003 ms
[firefox Windows 7 52.0]       returns a deferred object
[firefox Windows 7 52.0]         -> PASSED : it calls done after success   14 ms
[firefox Windows 7 52.0]         -> PASSED : calls fail after failure   1911 ms
[firefox Windows 7 52.0]         -> PENDING: throws if you don't listen for fails
[firefox Windows 7 52.0]     the selectLines method
[firefox Windows 7 52.0]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[firefox Windows 7 52.0]       fset of $endLine   7 ms
[firefox Windows 7 52.0]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   2 ms
[firefox Windows 7 52.0]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   2 ms
[firefox Windows 7 52.0]       -> PASSED : selects full line when offset is longer than line content   2 ms
[firefox Windows 7 52.0]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[firefox Windows 7 52.0]       no offset is provided   1 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] importexport.js
[firefox Windows 7 52.0]   import functionality
[firefox Windows 7 52.0]     -> PENDING: import a pad with newlines from txt
[firefox Windows 7 52.0]     -> PENDING: import a pad with newlines from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with attributes from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with bullets from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with bullets and newlines from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with bullets and newlines and attributes from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with nested bullets from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[firefox Windows 7 52.0]     ml
[firefox Windows 7 52.0]     -> PENDING: import a pad with ordered lists from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with ordered lists and newlines from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[firefox Windows 7 52.0]     tml
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] importindents.js
[firefox Windows 7 52.0]   import indents functionality
[firefox Windows 7 52.0]     -> PENDING: import a pad with indents from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with indented lists and newlines from html
[firefox Windows 7 52.0]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[firefox Windows 7 52.0]     ml
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] indentation.js
[firefox Windows 7 52.0]   indentation button
[firefox Windows 7 52.0]     -> PASSED : indent text with keypress   51 ms
[firefox Windows 7 52.0]     -> PASSED : indent text with button   57 ms
[firefox Windows 7 52.0]     -> PASSED : keeps the indent on enter for the new line   95 ms
[firefox Windows 7 52.0]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[firefox Windows 7 52.0]     , or '{'   176 ms
[firefox Windows 7 52.0]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[firefox Windows 7 52.0]     ith ':', '[', '(', or '{'   110 ms
[firefox Windows 7 52.0]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[firefox Windows 7 52.0]      outdented   161 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] italic.js
[firefox Windows 7 52.0]   italic some text
[firefox Windows 7 52.0]     -> PENDING: makes text italic using button
[firefox Windows 7 52.0]     -> PENDING: makes text italic using keypress
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] language.js
[firefox Windows 7 52.0]   Language select and change
[firefox Windows 7 52.0]     -> PASSED : makes text german   245 ms
[firefox Windows 7 52.0]     -> PASSED : makes text English   103 ms
[firefox Windows 7 52.0]     -> PASSED : changes direction when picking an rtl lang   428 ms
[firefox Windows 7 52.0]     -> PASSED : changes direction when picking an ltr lang   72 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] multiple_authors_clear_authorship_colors.js
[firefox Windows 7 52.0]   author of pad edition
[firefox Windows 7 52.0]     -> PENDING: Clears Authorship by second user
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] ordered_list.js
[firefox Windows 7 52.0]   assign ordered list
[firefox Windows 7 52.0]     -> PASSED : inserts ordered list text   131 ms
[firefox Windows 7 52.0]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[firefox Windows 7 52.0]     PASTING INTO A PAD
[firefox Windows 7 52.0]     when user presses Ctrl+Shift+N
[firefox Windows 7 52.0]       and pad shortcut is enabled
[firefox Windows 7 52.0]         -> PASSED : inserts unordered list   13 ms
[firefox Windows 7 52.0]       and pad shortcut is disabled
[firefox Windows 7 52.0]         -> PASSED : does not insert unordered list   1902 ms
[firefox Windows 7 52.0]     when user presses Ctrl+Shift+1
[firefox Windows 7 52.0]       and pad shortcut is enabled
[firefox Windows 7 52.0]         -> PASSED : inserts unordered list   23 ms
[firefox Windows 7 52.0]       and pad shortcut is disabled
[firefox Windows 7 52.0]         -> PASSED : does not insert unordered list   1905 ms
[firefox Windows 7 52.0]   Pressing Tab in an OL increases and decreases indentation
[firefox Windows 7 52.0]     -> PASSED : indent and de-indent list item with keypress   134 ms
[firefox Windows 7 52.0]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[firefox Windows 7 52.0]   ng
[firefox Windows 7 52.0]     -> PASSED : indent and de-indent list item with indent button   93 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] pad_modal.js
[firefox Windows 7 52.0]   Pad modal
[firefox Windows 7 52.0]     when modal is a "force reconnect" message
[firefox Windows 7 52.0]       -> PASSED : disables editor   2 ms
[firefox Windows 7 52.0]       and user clicks on editor
[firefox Windows 7 52.0]         -> PASSED : does not close the modal   4 ms
[firefox Windows 7 52.0]       and user clicks on pad outer
[firefox Windows 7 52.0]         -> PASSED : does not close the modal   2 ms
[firefox Windows 7 52.0]     when modal is not an error message
[firefox Windows 7 52.0]       and user clicks on editor
[firefox Windows 7 52.0]         -> PASSED : closes the modal   2 ms
[firefox Windows 7 52.0]       and user clicks on pad outer
[firefox Windows 7 52.0]         -> PASSED : closes the modal   3 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] redo.js
[firefox Windows 7 52.0]   undo button then redo button
[firefox Windows 7 52.0]     -> PASSED : redo some typing with button   72 ms
[firefox Windows 7 52.0]     -> PASSED : redo some typing with keypress   71 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] responsiveness.js
[firefox Windows 7 52.0]   Responsiveness of Editor
[firefox Windows 7 52.0]     -> PENDING: Fast response to keypress in pad with large amount of contents
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] select_formatting_buttons.js
[firefox Windows 7 52.0]   select formatting buttons when selection has style applied
[firefox Windows 7 52.0]     when selection is in a text with italic applied
[firefox Windows 7 52.0]       -> PENDING: selects the italic button
[firefox Windows 7 52.0]     when caret is in a position with italic applied
[firefox Windows 7 52.0]       -> PENDING: selects the italic button
[firefox Windows 7 52.0]     when selection is in a text with bold applied
[firefox Windows 7 52.0]       -> PENDING: selects the bold button
[firefox Windows 7 52.0]     when caret is in a position with bold applied
[firefox Windows 7 52.0]       -> PENDING: selects the bold button
[firefox Windows 7 52.0]     when selection is in a text with underline applied
[firefox Windows 7 52.0]       -> PENDING: selects the underline button
[firefox Windows 7 52.0]     when caret is in a position with underline applied
[firefox Windows 7 52.0]       -> PENDING: selects the underline button
[firefox Windows 7 52.0]     when selection is in a text with strikethrough applied
[firefox Windows 7 52.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 52.0]     when caret is in a position with strikethrough applied
[firefox Windows 7 52.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 52.0]     when user applies a style and the selection does not change
[firefox Windows 7 52.0]       -> PENDING: selects the style button
[firefox Windows 7 52.0]     when user presses CMD + I
[firefox Windows 7 52.0]       -> PENDING: selects the italic button
[firefox Windows 7 52.0]       and user presses CMD + I again
[firefox Windows 7 52.0]         -> PENDING: deselects the italic button
[firefox Windows 7 52.0]     when user presses CMD + B
[firefox Windows 7 52.0]       -> PENDING: selects the bold button
[firefox Windows 7 52.0]       and user presses CMD + B again
[firefox Windows 7 52.0]         -> PENDING: deselects the bold button
[firefox Windows 7 52.0]     when user presses CMD + U
[firefox Windows 7 52.0]       -> PENDING: selects the underline button
[firefox Windows 7 52.0]       and user presses CMD + U again
[firefox Windows 7 52.0]         -> PENDING: deselects the underline button
[firefox Windows 7 52.0]     when user presses CMD + 5
[firefox Windows 7 52.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 52.0]       and user presses CMD + 5 again
[firefox Windows 7 52.0]         -> PENDING: deselects the strikethrough button
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] strikethrough.js
[firefox Windows 7 52.0]   strikethrough button
[firefox Windows 7 52.0]     -> PASSED : makes text strikethrough   25 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] timeslider.js
[firefox Windows 7 52.0]   timeslider button takes you to the timeslider of a pad
[firefox Windows 7 52.0]     -> PENDING: timeslider contained in URL
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] timeslider_follow.js
[firefox Windows 7 52.0]   timeslider
[firefox Windows 7 52.0]     -> PASSED : follow content as it's added to timeslider   12055 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] timeslider_labels.js
[firefox Windows 7 52.0]   timeslider
[firefox Windows 7 52.0]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[firefox Windows 7 52.0]     NaN
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] timeslider_numeric_padID.js
[firefox Windows 7 52.0]   timeslider
[firefox Windows 7 52.0]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   445
[firefox Windows 7 52.0]     6 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] timeslider_revisions.js
[firefox Windows 7 52.0]   timeslider
[firefox Windows 7 52.0]     -> PASSED : loads adds a hundred revisions   96170 ms
[firefox Windows 7 52.0]     -> PENDING: changes the url when clicking on the timeslider
[firefox Windows 7 52.0]     -> PASSED : jumps to a revision given in the url   1990 ms
[firefox Windows 7 52.0]     -> PASSED : checks the export url   3403 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] undo.js
[firefox Windows 7 52.0]   undo button
[firefox Windows 7 52.0]     -> PENDING: undo some typing by clicking undo button
[firefox Windows 7 52.0]     -> PENDING: undo some typing using a keypress
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] unordered_list.js
[firefox Windows 7 52.0]   assign unordered list
[firefox Windows 7 52.0]     -> PENDING: insert unordered list text then removes by outdent
[firefox Windows 7 52.0]   unassign unordered list
[firefox Windows 7 52.0]     -> PASSED : insert unordered list text then remove by clicking list again   79 ms
[firefox Windows 7 52.0]   keep unordered list on enter key
[firefox Windows 7 52.0]     -> PASSED : Keeps the unordered list on enter for the new line   89 ms
[firefox Windows 7 52.0]   Pressing Tab in an UL increases and decreases indentation
[firefox Windows 7 52.0]     -> PASSED : indent and de-indent list item with keypress   82 ms
[firefox Windows 7 52.0]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[firefox Windows 7 52.0]   ng
[firefox Windows 7 52.0]     -> PASSED : indent and de-indent list item with indent button   119 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] urls_become_clickable.js
[firefox Windows 7 52.0]   urls
[firefox Windows 7 52.0]     -> PASSED : when you enter an url, it becomes clickable   50 ms
[firefox Windows 7 52.0]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[firefox Windows 7 52.0]      whole URL   60 ms
[firefox Windows 7 52.0]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   5
[firefox Windows 7 52.0]     6 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] xxauto_reconnect.js
[firefox Windows 7 52.0]   Automatic pad reload on Force Reconnect message
[firefox Windows 7 52.0]     -> PASSED : displays a count down timer to automatically reconnect   3 ms
[firefox Windows 7 52.0]     and user clicks on Cancel
[firefox Windows 7 52.0]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" is th
[firefox Windows 7 52.0]       is caught?
[firefox Windows 7 52.0]       @http://localhost:9001/tests/frontend/:38:11
[firefox Windows 7 52.0]     and user does not click on Cancel until timer expires
[firefox Windows 7 52.0]       -> PASSED : reloads the pad   2583 ms
[firefox Windows 7 52.0] 
[firefox Windows 7 52.0] FINISHED - 63 tests passed, 1 tests failed, 63  pending, duration: 3:51
[firefox Windows 7 52.0] 
Remote sauce test '291c596 - firefox 52.0, Windows 7' finished! https://saucelabs.com/jobs/b93911627c4340bda60b400ab9cb6fba
[microsoftedge Windows 10 83.0] alphabet.js
[microsoftedge Windows 10 83.0]   All the alphabet works n stuff
[microsoftedge Windows 10 83.0]     -> PASSED : when you enter any char it appears right   59 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] authorship_of_editions.js
[microsoftedge Windows 10 83.0]   author of pad edition
[microsoftedge Windows 10 83.0]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[microsoftedge Windows 10 83.0]     e
[microsoftedge Windows 10 83.0]     -> PENDING: marks only the new content as changes of the second user on a line with o
[microsoftedge Windows 10 83.0]     rdered list
[microsoftedge Windows 10 83.0]     -> PENDING: marks only the new content as changes of the second user on a line with u
[microsoftedge Windows 10 83.0]     nordered list
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] bold.js
[microsoftedge Windows 10 83.0]   bold button
[microsoftedge Windows 10 83.0]     -> PASSED : makes text bold on click   14 ms
[microsoftedge Windows 10 83.0]     -> PASSED : makes text bold on keypress   11 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] change_user_color.js
[microsoftedge Windows 10 83.0]   change user color
[microsoftedge Windows 10 83.0]     -> PENDING: Color picker matches original color and remembers the user color after a 
[microsoftedge Windows 10 83.0]     refresh
[microsoftedge Windows 10 83.0]     -> PENDING: Own user color is shown when you enter a chat
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] change_user_name.js
[microsoftedge Windows 10 83.0]   change username value
[microsoftedge Windows 10 83.0]     -> PENDING: Remembers the user name after a refresh
[microsoftedge Windows 10 83.0]     -> PENDING: Own user name is shown when you enter a chat
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] chat.js
[microsoftedge Windows 10 83.0]   Chat messages and UI
[microsoftedge Windows 10 83.0]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[microsoftedge Windows 10 83.0]     -> PENDING: makes sure that an empty message can't be sent
[microsoftedge Windows 10 83.0]     -> PENDING: makes chat stick to right side of the screen
[microsoftedge Windows 10 83.0]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[microsoftedge Windows 10 83.0]     er
[microsoftedge Windows 10 83.0]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[microsoftedge Windows 10 83.0]      chat
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] chat_load_messages.js
[microsoftedge Windows 10 83.0]   chat-load-messages
[microsoftedge Windows 10 83.0]     -> PENDING: creates a pad
[microsoftedge Windows 10 83.0]     -> PENDING: adds a lot of messages
[microsoftedge Windows 10 83.0]     -> PENDING: checks initial message count
[microsoftedge Windows 10 83.0]     -> PENDING: loads more messages
[microsoftedge Windows 10 83.0]     -> PENDING: checks for button vanishing
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] clear_authorship_colors.js
[microsoftedge Windows 10 83.0]   clear authorship colors button
[microsoftedge Windows 10 83.0]     -> PASSED : makes text clear authorship colors   526 ms
[microsoftedge Windows 10 83.0]     -> PASSED : makes text clear authorship colors and checks it can't be undone   31 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] delete.js
[microsoftedge Windows 10 83.0]   delete keystroke
[microsoftedge Windows 10 83.0]     -> PENDING: makes text delete
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] drag_and_drop.js
[microsoftedge Windows 10 83.0]   drag and drop
[microsoftedge Windows 10 83.0]     when user drags part of one line and drops it far form its original place
[microsoftedge Windows 10 83.0]       and user triggers UNDO
[microsoftedge Windows 10 83.0]         -> PASSED : moves text back to its original place   2 ms
[microsoftedge Windows 10 83.0]     when user drags some lines far form its original place
[microsoftedge Windows 10 83.0]       and user triggers UNDO
[microsoftedge Windows 10 83.0]         -> PASSED : moves text back to its original place   2 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] embed_value.js
[microsoftedge Windows 10 83.0]   embed links
[microsoftedge Windows 10 83.0]     read and write
[microsoftedge Windows 10 83.0]       the share link
[microsoftedge Windows 10 83.0]         -> PASSED : is the actual pad url   10 ms
[microsoftedge Windows 10 83.0]       the embed as iframe code
[microsoftedge Windows 10 83.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   22 ms
[microsoftedge Windows 10 83.0]     when read only option is set
[microsoftedge Windows 10 83.0]       the share link
[microsoftedge Windows 10 83.0]         -> PASSED : shows a read only url   9 ms
[microsoftedge Windows 10 83.0]       the embed as iframe code
[microsoftedge Windows 10 83.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   15 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] enter.js
[microsoftedge Windows 10 83.0]   enter keystroke
[microsoftedge Windows 10 83.0]     -> PASSED : creates a new line & puts cursor onto a new line   521 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] font_type.js
[microsoftedge Windows 10 83.0]   font select
[microsoftedge Windows 10 83.0]     -> PENDING: makes text RobotoMono
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] helper.js
[microsoftedge Windows 10 83.0]   the test helper
[microsoftedge Windows 10 83.0]     the newPad method
[microsoftedge Windows 10 83.0]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[microsoftedge Windows 10 83.0]       -> PASSED : gives me 3 jquery instances of chrome, outer and inner   1538 ms
[microsoftedge Windows 10 83.0]       -> PASSED : clears cookies   4009 ms
[microsoftedge Windows 10 83.0]       -> PASSED : sets pad prefs cookie   1702 ms
[microsoftedge Windows 10 83.0]     the waitFor method
[microsoftedge Windows 10 83.0]       -> PASSED : takes a timeout and waits long enough   1505 ms
[microsoftedge Windows 10 83.0]       -> PASSED : takes an interval and checks on every interval   2006 ms
[microsoftedge Windows 10 83.0]       returns a deferred object
[microsoftedge Windows 10 83.0]         -> PASSED : it calls done after success   10 ms
[microsoftedge Windows 10 83.0]         -> PASSED : calls fail after failure   1916 ms
[microsoftedge Windows 10 83.0]         -> PENDING: throws if you don't listen for fails
[microsoftedge Windows 10 83.0]     the selectLines method
[microsoftedge Windows 10 83.0]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[microsoftedge Windows 10 83.0]       fset of $endLine   2 ms
[microsoftedge Windows 10 83.0]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   1 ms
[microsoftedge Windows 10 83.0]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   1 ms
[microsoftedge Windows 10 83.0]       -> PASSED : selects full line when offset is longer than line content   2 ms
[microsoftedge Windows 10 83.0]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[microsoftedge Windows 10 83.0]       no offset is provided   0 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] importexport.js
[microsoftedge Windows 10 83.0]   import functionality
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with newlines from txt
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with newlines from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with attributes from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with bullets from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with bullets and newlines from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with bullets and newlines and attributes from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with nested bullets from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[microsoftedge Windows 10 83.0]     ml
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with ordered lists from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with ordered lists and newlines from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[microsoftedge Windows 10 83.0]     tml
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] importindents.js
[microsoftedge Windows 10 83.0]   import indents functionality
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with indents from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with indented lists and newlines from html
[microsoftedge Windows 10 83.0]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[microsoftedge Windows 10 83.0]     ml
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] indentation.js
[microsoftedge Windows 10 83.0]   indentation button
[microsoftedge Windows 10 83.0]     -> PASSED : indent text with keypress   21 ms
[microsoftedge Windows 10 83.0]     -> PASSED : indent text with button   18 ms
[microsoftedge Windows 10 83.0]     -> PASSED : keeps the indent on enter for the new line   538 ms
[microsoftedge Windows 10 83.0]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[microsoftedge Windows 10 83.0]     , or '{'   60 ms
[microsoftedge Windows 10 83.0]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[microsoftedge Windows 10 83.0]     ith ':', '[', '(', or '{'   537 ms
[microsoftedge Windows 10 83.0]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[microsoftedge Windows 10 83.0]      outdented   591 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] italic.js
[microsoftedge Windows 10 83.0]   italic some text
[microsoftedge Windows 10 83.0]     -> PENDING: makes text italic using button
[microsoftedge Windows 10 83.0]     -> PENDING: makes text italic using keypress
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] language.js
[microsoftedge Windows 10 83.0]   Language select and change
[microsoftedge Windows 10 83.0]     -> PASSED : makes text german   191 ms
[microsoftedge Windows 10 83.0]     -> PASSED : makes text English   54 ms
[microsoftedge Windows 10 83.0]     -> PASSED : changes direction when picking an rtl lang   342 ms
[microsoftedge Windows 10 83.0]     -> PASSED : changes direction when picking an ltr lang   34 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] multiple_authors_clear_authorship_colors.js
[microsoftedge Windows 10 83.0]   author of pad edition
[microsoftedge Windows 10 83.0]     -> PENDING: Clears Authorship by second user
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] ordered_list.js
[microsoftedge Windows 10 83.0]   assign ordered list
[microsoftedge Windows 10 83.0]     -> PASSED : inserts ordered list text   21 ms
[microsoftedge Windows 10 83.0]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[microsoftedge Windows 10 83.0]     PASTING INTO A PAD
[microsoftedge Windows 10 83.0]     when user presses Ctrl+Shift+N
[microsoftedge Windows 10 83.0]       and pad shortcut is enabled
[microsoftedge Windows 10 83.0]         -> PASSED : inserts unordered list   11 ms
[microsoftedge Windows 10 83.0]       and pad shortcut is disabled
[microsoftedge Windows 10 83.0]         -> PASSED : does not insert unordered list   1906 ms
[microsoftedge Windows 10 83.0]     when user presses Ctrl+Shift+1
[microsoftedge Windows 10 83.0]       and pad shortcut is enabled
[microsoftedge Windows 10 83.0]         -> PASSED : inserts unordered list   10 ms
[microsoftedge Windows 10 83.0]       and pad shortcut is disabled
[microsoftedge Windows 10 83.0]         -> PASSED : does not insert unordered list   1906 ms
[microsoftedge Windows 10 83.0]   Pressing Tab in an OL increases and decreases indentation
[microsoftedge Windows 10 83.0]     -> PASSED : indent and de-indent list item with keypress   31 ms
[microsoftedge Windows 10 83.0]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[microsoftedge Windows 10 83.0]   ng
[microsoftedge Windows 10 83.0]     -> PASSED : indent and de-indent list item with indent button   33 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] pad_modal.js
[microsoftedge Windows 10 83.0]   Pad modal
[microsoftedge Windows 10 83.0]     when modal is a "force reconnect" message
[microsoftedge Windows 10 83.0]       -> PASSED : disables editor   1 ms
[microsoftedge Windows 10 83.0]       and user clicks on editor
[microsoftedge Windows 10 83.0]         -> PASSED : does not close the modal   1 ms
[microsoftedge Windows 10 83.0]       and user clicks on pad outer
[microsoftedge Windows 10 83.0]         -> PASSED : does not close the modal   0 ms
[microsoftedge Windows 10 83.0]     when modal is not an error message
[microsoftedge Windows 10 83.0]       and user clicks on editor
[microsoftedge Windows 10 83.0]         -> PASSED : closes the modal   1 ms
[microsoftedge Windows 10 83.0]       and user clicks on pad outer
[microsoftedge Windows 10 83.0]         -> PASSED : closes the modal   1 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] redo.js
[microsoftedge Windows 10 83.0]   undo button then redo button
[microsoftedge Windows 10 83.0]     -> PASSED : redo some typing with button   32 ms
[microsoftedge Windows 10 83.0]     -> PASSED : redo some typing with keypress   40 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] responsiveness.js
[microsoftedge Windows 10 83.0]   Responsiveness of Editor
[microsoftedge Windows 10 83.0]     -> PENDING: Fast response to keypress in pad with large amount of contents
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] select_formatting_buttons.js
[microsoftedge Windows 10 83.0]   select formatting buttons when selection has style applied
[microsoftedge Windows 10 83.0]     when selection is in a text with italic applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the italic button
[microsoftedge Windows 10 83.0]     when caret is in a position with italic applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the italic button
[microsoftedge Windows 10 83.0]     when selection is in a text with bold applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the bold button
[microsoftedge Windows 10 83.0]     when caret is in a position with bold applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the bold button
[microsoftedge Windows 10 83.0]     when selection is in a text with underline applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the underline button
[microsoftedge Windows 10 83.0]     when caret is in a position with underline applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the underline button
[microsoftedge Windows 10 83.0]     when selection is in a text with strikethrough applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the strikethrough button
[microsoftedge Windows 10 83.0]     when caret is in a position with strikethrough applied
[microsoftedge Windows 10 83.0]       -> PENDING: selects the strikethrough button
[microsoftedge Windows 10 83.0]     when user applies a style and the selection does not change
[microsoftedge Windows 10 83.0]       -> PENDING: selects the style button
[microsoftedge Windows 10 83.0]     when user presses CMD + I
[microsoftedge Windows 10 83.0]       -> PENDING: selects the italic button
[microsoftedge Windows 10 83.0]       and user presses CMD + I again
[microsoftedge Windows 10 83.0]         -> PENDING: deselects the italic button
[microsoftedge Windows 10 83.0]     when user presses CMD + B
[microsoftedge Windows 10 83.0]       -> PENDING: selects the bold button
[microsoftedge Windows 10 83.0]       and user presses CMD + B again
[microsoftedge Windows 10 83.0]         -> PENDING: deselects the bold button
[microsoftedge Windows 10 83.0]     when user presses CMD + U
[microsoftedge Windows 10 83.0]       -> PENDING: selects the underline button
[microsoftedge Windows 10 83.0]       and user presses CMD + U again
[microsoftedge Windows 10 83.0]         -> PENDING: deselects the underline button
[microsoftedge Windows 10 83.0]     when user presses CMD + 5
[microsoftedge Windows 10 83.0]       -> PENDING: selects the strikethrough button
[microsoftedge Windows 10 83.0]       and user presses CMD + 5 again
[microsoftedge Windows 10 83.0]         -> PENDING: deselects the strikethrough button
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] strikethrough.js
[microsoftedge Windows 10 83.0]   strikethrough button
[microsoftedge Windows 10 83.0]     -> PASSED : makes text strikethrough   10 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] timeslider.js
[microsoftedge Windows 10 83.0]   timeslider button takes you to the timeslider of a pad
[microsoftedge Windows 10 83.0]     -> PENDING: timeslider contained in URL
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] timeslider_follow.js
[microsoftedge Windows 10 83.0]   timeslider
[microsoftedge Windows 10 83.0]     -> PASSED : follow content as it's added to timeslider   12044 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] timeslider_labels.js
[microsoftedge Windows 10 83.0]   timeslider
[microsoftedge Windows 10 83.0]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[microsoftedge Windows 10 83.0]     NaN
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] timeslider_numeric_padID.js
[microsoftedge Windows 10 83.0]   timeslider
[microsoftedge Windows 10 83.0]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   444
[microsoftedge Windows 10 83.0]     3 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] timeslider_revisions.js
[microsoftedge Windows 10 83.0]   timeslider
[microsoftedge Windows 10 83.0]     -> PASSED : loads adds a hundred revisions   96176 ms
[microsoftedge Windows 10 83.0]     -> PENDING: changes the url when clicking on the timeslider
[microsoftedge Windows 10 83.0]     -> PASSED : jumps to a revision given in the url   2047 ms
[microsoftedge Windows 10 83.0]     -> PASSED : checks the export url   3463 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] undo.js
[microsoftedge Windows 10 83.0]   undo button
[microsoftedge Windows 10 83.0]     -> PENDING: undo some typing by clicking undo button
[microsoftedge Windows 10 83.0]     -> PENDING: undo some typing using a keypress
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] unordered_list.js
[microsoftedge Windows 10 83.0]   assign unordered list
[microsoftedge Windows 10 83.0]     -> PENDING: insert unordered list text then removes by outdent
[microsoftedge Windows 10 83.0]   unassign unordered list
[microsoftedge Windows 10 83.0]     -> PASSED : insert unordered list text then remove by clicking list again   36 ms
[microsoftedge Windows 10 83.0]   keep unordered list on enter key
[microsoftedge Windows 10 83.0]     -> PASSED : Keeps the unordered list on enter for the new line   39 ms
[microsoftedge Windows 10 83.0]   Pressing Tab in an UL increases and decreases indentation
[microsoftedge Windows 10 83.0]     -> PASSED : indent and de-indent list item with keypress   29 ms
[microsoftedge Windows 10 83.0]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[microsoftedge Windows 10 83.0]   ng
[microsoftedge Windows 10 83.0]     -> PASSED : indent and de-indent list item with indent button   39 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] urls_become_clickable.js
[microsoftedge Windows 10 83.0]   urls
[microsoftedge Windows 10 83.0]     -> PASSED : when you enter an url, it becomes clickable   18 ms
[microsoftedge Windows 10 83.0]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[microsoftedge Windows 10 83.0]      whole URL   516 ms
[microsoftedge Windows 10 83.0]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   2
[microsoftedge Windows 10 83.0]     0 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] xxauto_reconnect.js
[microsoftedge Windows 10 83.0]   Automatic pad reload on Force Reconnect message
[microsoftedge Windows 10 83.0]     -> PASSED : displays a count down timer to automatically reconnect   1 ms
[microsoftedge Windows 10 83.0]     and user clicks on Cancel
[microsoftedge Windows 10 83.0]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" Error
[microsoftedge Windows 10 83.0]       : is this caught?
[microsoftedge Windows 10 83.0]           at Context.<anonymous> (<anonymous>:38:11)
[microsoftedge Windows 10 83.0]     and user does not click on Cancel until timer expires
[microsoftedge Windows 10 83.0]       -> PASSED : reloads the pad   2056 ms
[microsoftedge Windows 10 83.0] 
[microsoftedge Windows 10 83.0] FINISHED - 63 tests passed, 1 tests failed, 63  pending, duration: 3:46
[microsoftedge Windows 10 83.0] 
Remote sauce test '291c596 - microsoftedge 83.0, Windows 10' finished! https://saucelabs.com/jobs/b1fdbcaf198f4741b58aa6fda32dfbb5
[firefox Windows 7 78.0] alphabet.js
[firefox Windows 7 78.0]   All the alphabet works n stuff
[firefox Windows 7 78.0]     -> PASSED : when you enter any char it appears right   50 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] authorship_of_editions.js
[firefox Windows 7 78.0]   author of pad edition
[firefox Windows 7 78.0]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[firefox Windows 7 78.0]     e
[firefox Windows 7 78.0]     -> PENDING: marks only the new content as changes of the second user on a line with o
[firefox Windows 7 78.0]     rdered list
[firefox Windows 7 78.0]     -> PENDING: marks only the new content as changes of the second user on a line with u
[firefox Windows 7 78.0]     nordered list
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] bold.js
[firefox Windows 7 78.0]   bold button
[firefox Windows 7 78.0]     -> PASSED : makes text bold on click   42 ms
[firefox Windows 7 78.0]     -> PASSED : makes text bold on keypress   17 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] change_user_color.js
[firefox Windows 7 78.0]   change user color
[firefox Windows 7 78.0]     -> PENDING: Color picker matches original color and remembers the user color after a 
[firefox Windows 7 78.0]     refresh
[firefox Windows 7 78.0]     -> PENDING: Own user color is shown when you enter a chat
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] change_user_name.js
[firefox Windows 7 78.0]   change username value
[firefox Windows 7 78.0]     -> PENDING: Remembers the user name after a refresh
[firefox Windows 7 78.0]     -> PENDING: Own user name is shown when you enter a chat
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] chat.js
[firefox Windows 7 78.0]   Chat messages and UI
[firefox Windows 7 78.0]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[firefox Windows 7 78.0]     -> PENDING: makes sure that an empty message can't be sent
[firefox Windows 7 78.0]     -> PENDING: makes chat stick to right side of the screen
[firefox Windows 7 78.0]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[firefox Windows 7 78.0]     er
[firefox Windows 7 78.0]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[firefox Windows 7 78.0]      chat
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] chat_load_messages.js
[firefox Windows 7 78.0]   chat-load-messages
[firefox Windows 7 78.0]     -> PENDING: creates a pad
[firefox Windows 7 78.0]     -> PENDING: adds a lot of messages
[firefox Windows 7 78.0]     -> PENDING: checks initial message count
[firefox Windows 7 78.0]     -> PENDING: loads more messages
[firefox Windows 7 78.0]     -> PENDING: checks for button vanishing
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] clear_authorship_colors.js
[firefox Windows 7 78.0]   clear authorship colors button
[firefox Windows 7 78.0]     -> PASSED : makes text clear authorship colors   59 ms
[firefox Windows 7 78.0]     -> PASSED : makes text clear authorship colors and checks it can't be undone   66 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] delete.js
[firefox Windows 7 78.0]   delete keystroke
[firefox Windows 7 78.0]     -> PENDING: makes text delete
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] drag_and_drop.js
[firefox Windows 7 78.0]   drag and drop
[firefox Windows 7 78.0]     when user drags part of one line and drops it far form its original place
[firefox Windows 7 78.0]       and user triggers UNDO
[firefox Windows 7 78.0]         -> PASSED : moves text back to its original place   1 ms
[firefox Windows 7 78.0]     when user drags some lines far form its original place
[firefox Windows 7 78.0]       and user triggers UNDO
[firefox Windows 7 78.0]         -> PASSED : moves text back to its original place   1 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] embed_value.js
[firefox Windows 7 78.0]   embed links
[firefox Windows 7 78.0]     read and write
[firefox Windows 7 78.0]       the share link
[firefox Windows 7 78.0]         -> PASSED : is the actual pad url   11 ms
[firefox Windows 7 78.0]       the embed as iframe code
[firefox Windows 7 78.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   25 ms
[firefox Windows 7 78.0]     when read only option is set
[firefox Windows 7 78.0]       the share link
[firefox Windows 7 78.0]         -> PASSED : shows a read only url   16 ms
[firefox Windows 7 78.0]       the embed as iframe code
[firefox Windows 7 78.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   19 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] enter.js
[firefox Windows 7 78.0]   enter keystroke
[firefox Windows 7 78.0]     -> PASSED : creates a new line & puts cursor onto a new line   47 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] font_type.js
[firefox Windows 7 78.0]   font select
[firefox Windows 7 78.0]     -> PENDING: makes text RobotoMono
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] helper.js
[firefox Windows 7 78.0]   the test helper
[firefox Windows 7 78.0]     the newPad method
[firefox Windows 7 78.0]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[firefox Windows 7 78.0]       -> PASSED : gives me 3 jquery instances of chrome, outer and inner   1843 ms
[firefox Windows 7 78.0]       -> PASSED : clears cookies   4773 ms
[firefox Windows 7 78.0]       -> PASSED : sets pad prefs cookie   2036 ms
[firefox Windows 7 78.0]     the waitFor method
[firefox Windows 7 78.0]       -> PASSED : takes a timeout and waits long enough   1513 ms
[firefox Windows 7 78.0]       -> PASSED : takes an interval and checks on every interval   2004 ms
[firefox Windows 7 78.0]       returns a deferred object
[firefox Windows 7 78.0]         -> PASSED : it calls done after success   16 ms
[firefox Windows 7 78.0]         -> PASSED : calls fail after failure   1908 ms
[firefox Windows 7 78.0]         -> PENDING: throws if you don't listen for fails
[firefox Windows 7 78.0]     the selectLines method
[firefox Windows 7 78.0]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[firefox Windows 7 78.0]       fset of $endLine   3 ms
[firefox Windows 7 78.0]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   2 ms
[firefox Windows 7 78.0]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   1 ms
[firefox Windows 7 78.0]       -> PASSED : selects full line when offset is longer than line content   1 ms
[firefox Windows 7 78.0]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[firefox Windows 7 78.0]       no offset is provided   1 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] importexport.js
[firefox Windows 7 78.0]   import functionality
[firefox Windows 7 78.0]     -> PENDING: import a pad with newlines from txt
[firefox Windows 7 78.0]     -> PENDING: import a pad with newlines from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with attributes from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with bullets from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with bullets and newlines from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with bullets and newlines and attributes from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with nested bullets from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[firefox Windows 7 78.0]     ml
[firefox Windows 7 78.0]     -> PENDING: import a pad with ordered lists from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with ordered lists and newlines from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[firefox Windows 7 78.0]     tml
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] importindents.js
[firefox Windows 7 78.0]   import indents functionality
[firefox Windows 7 78.0]     -> PENDING: import a pad with indents from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with indented lists and newlines from html
[firefox Windows 7 78.0]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[firefox Windows 7 78.0]     ml
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] indentation.js
[firefox Windows 7 78.0]   indentation button
[firefox Windows 7 78.0]     -> PASSED : indent text with keypress   34 ms
[firefox Windows 7 78.0]     -> PASSED : indent text with button   75 ms
[firefox Windows 7 78.0]     -> PASSED : keeps the indent on enter for the new line   67 ms
[firefox Windows 7 78.0]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[firefox Windows 7 78.0]     , or '{'   126 ms
[firefox Windows 7 78.0]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[firefox Windows 7 78.0]     ith ':', '[', '(', or '{'   91 ms
[firefox Windows 7 78.0]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[firefox Windows 7 78.0]      outdented   177 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] italic.js
[firefox Windows 7 78.0]   italic some text
[firefox Windows 7 78.0]     -> PENDING: makes text italic using button
[firefox Windows 7 78.0]     -> PENDING: makes text italic using keypress
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] language.js
[firefox Windows 7 78.0]   Language select and change
[firefox Windows 7 78.0]     -> PASSED : makes text german   213 ms
[firefox Windows 7 78.0]     -> PASSED : makes text English   92 ms
[firefox Windows 7 78.0]     -> PASSED : changes direction when picking an rtl lang   321 ms
[firefox Windows 7 78.0]     -> PASSED : changes direction when picking an ltr lang   58 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] multiple_authors_clear_authorship_colors.js
[firefox Windows 7 78.0]   author of pad edition
[firefox Windows 7 78.0]     -> PENDING: Clears Authorship by second user
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] ordered_list.js
[firefox Windows 7 78.0]   assign ordered list
[firefox Windows 7 78.0]     -> PASSED : inserts ordered list text   38 ms
[firefox Windows 7 78.0]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[firefox Windows 7 78.0]     PASTING INTO A PAD
[firefox Windows 7 78.0]     when user presses Ctrl+Shift+N
[firefox Windows 7 78.0]       and pad shortcut is enabled
[firefox Windows 7 78.0]         -> PASSED : inserts unordered list   17 ms
[firefox Windows 7 78.0]       and pad shortcut is disabled
[firefox Windows 7 78.0]         -> PASSED : does not insert unordered list   1916 ms
[firefox Windows 7 78.0]     when user presses Ctrl+Shift+1
[firefox Windows 7 78.0]       and pad shortcut is enabled
[firefox Windows 7 78.0]         -> PASSED : inserts unordered list   57 ms
[firefox Windows 7 78.0]       and pad shortcut is disabled
[firefox Windows 7 78.0]         -> PASSED : does not insert unordered list   1908 ms
[firefox Windows 7 78.0]   Pressing Tab in an OL increases and decreases indentation
[firefox Windows 7 78.0]     -> PASSED : indent and de-indent list item with keypress   72 ms
[firefox Windows 7 78.0]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[firefox Windows 7 78.0]   ng
[firefox Windows 7 78.0]     -> PASSED : indent and de-indent list item with indent button   98 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] pad_modal.js
[firefox Windows 7 78.0]   Pad modal
[firefox Windows 7 78.0]     when modal is a "force reconnect" message
[firefox Windows 7 78.0]       -> PASSED : disables editor   9 ms
[firefox Windows 7 78.0]       and user clicks on editor
[firefox Windows 7 78.0]         -> PASSED : does not close the modal   3 ms
[firefox Windows 7 78.0]       and user clicks on pad outer
[firefox Windows 7 78.0]         -> PASSED : does not close the modal   4 ms
[firefox Windows 7 78.0]     when modal is not an error message
[firefox Windows 7 78.0]       and user clicks on editor
[firefox Windows 7 78.0]         -> PASSED : closes the modal   1 ms
[firefox Windows 7 78.0]       and user clicks on pad outer
[firefox Windows 7 78.0]         -> PASSED : closes the modal   1 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] redo.js
[firefox Windows 7 78.0]   undo button then redo button
[firefox Windows 7 78.0]     -> PASSED : redo some typing with button   74 ms
[firefox Windows 7 78.0]     -> PASSED : redo some typing with keypress   56 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] responsiveness.js
[firefox Windows 7 78.0]   Responsiveness of Editor
[firefox Windows 7 78.0]     -> PENDING: Fast response to keypress in pad with large amount of contents
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] select_formatting_buttons.js
[firefox Windows 7 78.0]   select formatting buttons when selection has style applied
[firefox Windows 7 78.0]     when selection is in a text with italic applied
[firefox Windows 7 78.0]       -> PENDING: selects the italic button
[firefox Windows 7 78.0]     when caret is in a position with italic applied
[firefox Windows 7 78.0]       -> PENDING: selects the italic button
[firefox Windows 7 78.0]     when selection is in a text with bold applied
[firefox Windows 7 78.0]       -> PENDING: selects the bold button
[firefox Windows 7 78.0]     when caret is in a position with bold applied
[firefox Windows 7 78.0]       -> PENDING: selects the bold button
[firefox Windows 7 78.0]     when selection is in a text with underline applied
[firefox Windows 7 78.0]       -> PENDING: selects the underline button
[firefox Windows 7 78.0]     when caret is in a position with underline applied
[firefox Windows 7 78.0]       -> PENDING: selects the underline button
[firefox Windows 7 78.0]     when selection is in a text with strikethrough applied
[firefox Windows 7 78.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 78.0]     when caret is in a position with strikethrough applied
[firefox Windows 7 78.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 78.0]     when user applies a style and the selection does not change
[firefox Windows 7 78.0]       -> PENDING: selects the style button
[firefox Windows 7 78.0]     when user presses CMD + I
[firefox Windows 7 78.0]       -> PENDING: selects the italic button
[firefox Windows 7 78.0]       and user presses CMD + I again
[firefox Windows 7 78.0]         -> PENDING: deselects the italic button
[firefox Windows 7 78.0]     when user presses CMD + B
[firefox Windows 7 78.0]       -> PENDING: selects the bold button
[firefox Windows 7 78.0]       and user presses CMD + B again
[firefox Windows 7 78.0]         -> PENDING: deselects the bold button
[firefox Windows 7 78.0]     when user presses CMD + U
[firefox Windows 7 78.0]       -> PENDING: selects the underline button
[firefox Windows 7 78.0]       and user presses CMD + U again
[firefox Windows 7 78.0]         -> PENDING: deselects the underline button
[firefox Windows 7 78.0]     when user presses CMD + 5
[firefox Windows 7 78.0]       -> PENDING: selects the strikethrough button
[firefox Windows 7 78.0]       and user presses CMD + 5 again
[firefox Windows 7 78.0]         -> PENDING: deselects the strikethrough button
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] strikethrough.js
[firefox Windows 7 78.0]   strikethrough button
[firefox Windows 7 78.0]     -> PASSED : makes text strikethrough   20 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] timeslider.js
[firefox Windows 7 78.0]   timeslider button takes you to the timeslider of a pad
[firefox Windows 7 78.0]     -> PENDING: timeslider contained in URL
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] timeslider_follow.js
[firefox Windows 7 78.0]   timeslider
[firefox Windows 7 78.0]     -> PASSED : follow content as it's added to timeslider   12046 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] timeslider_labels.js
[firefox Windows 7 78.0]   timeslider
[firefox Windows 7 78.0]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[firefox Windows 7 78.0]     NaN
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] timeslider_numeric_padID.js
[firefox Windows 7 78.0]   timeslider
[firefox Windows 7 78.0]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   444
[firefox Windows 7 78.0]     1 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] timeslider_revisions.js
[firefox Windows 7 78.0]   timeslider
[firefox Windows 7 78.0]     -> PASSED : loads adds a hundred revisions   96197 ms
[firefox Windows 7 78.0]     -> PENDING: changes the url when clicking on the timeslider
[firefox Windows 7 78.0]     -> PASSED : jumps to a revision given in the url   2122 ms
[firefox Windows 7 78.0]     -> PASSED : checks the export url   3701 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] undo.js
[firefox Windows 7 78.0]   undo button
[firefox Windows 7 78.0]     -> PENDING: undo some typing by clicking undo button
[firefox Windows 7 78.0]     -> PENDING: undo some typing using a keypress
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] unordered_list.js
[firefox Windows 7 78.0]   assign unordered list
[firefox Windows 7 78.0]     -> PENDING: insert unordered list text then removes by outdent
[firefox Windows 7 78.0]   unassign unordered list
[firefox Windows 7 78.0]     -> PASSED : insert unordered list text then remove by clicking list again   135 ms
[firefox Windows 7 78.0]   keep unordered list on enter key
[firefox Windows 7 78.0]     -> PASSED : Keeps the unordered list on enter for the new line   66 ms
[firefox Windows 7 78.0]   Pressing Tab in an UL increases and decreases indentation
[firefox Windows 7 78.0]     -> PASSED : indent and de-indent list item with keypress   80 ms
[firefox Windows 7 78.0]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[firefox Windows 7 78.0]   ng
[firefox Windows 7 78.0]     -> PASSED : indent and de-indent list item with indent button   65 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] urls_become_clickable.js
[firefox Windows 7 78.0]   urls
[firefox Windows 7 78.0]     -> PASSED : when you enter an url, it becomes clickable   77 ms
[firefox Windows 7 78.0]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[firefox Windows 7 78.0]      whole URL   62 ms
[firefox Windows 7 78.0]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   5
[firefox Windows 7 78.0]     1 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] xxauto_reconnect.js
[firefox Windows 7 78.0]   Automatic pad reload on Force Reconnect message
[firefox Windows 7 78.0]     -> PASSED : displays a count down timer to automatically reconnect   3 ms
[firefox Windows 7 78.0]     and user clicks on Cancel
[firefox Windows 7 78.0]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" is th
[firefox Windows 7 78.0]       is caught?
[firefox Windows 7 78.0]       @http://localhost:9001/tests/frontend/ line 82 > scriptElement:38:11
[firefox Windows 7 78.0]     and user does not click on Cancel until timer expires
[firefox Windows 7 78.0]       -> PASSED : reloads the pad   2942 ms
[firefox Windows 7 78.0] 
[firefox Windows 7 78.0] FINISHED - 63 tests passed, 1 tests failed, 63  pending, duration: 4:3
[firefox Windows 7 78.0] 
Remote sauce test '291c596 - firefox 78.0, Windows 7' finished! https://saucelabs.com/jobs/40363b584f914621ae3bbf4305895577
[safari OS X 10.15 13.1] alphabet.js
[safari OS X 10.15 13.1]   All the alphabet works n stuff
[safari OS X 10.15 13.1]     -> PASSED : when you enter any char it appears right   45 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] authorship_of_editions.js
[safari OS X 10.15 13.1]   author of pad edition
[safari OS X 10.15 13.1]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[safari OS X 10.15 13.1]     e
[safari OS X 10.15 13.1]     -> PENDING: marks only the new content as changes of the second user on a line with o
[safari OS X 10.15 13.1]     rdered list
[safari OS X 10.15 13.1]     -> PENDING: marks only the new content as changes of the second user on a line with u
[safari OS X 10.15 13.1]     nordered list
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] bold.js
[safari OS X 10.15 13.1]   bold button
[safari OS X 10.15 13.1]     -> PASSED : makes text bold on click   16 ms
[safari OS X 10.15 13.1]     -> PASSED : makes text bold on keypress   8 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] change_user_color.js
[safari OS X 10.15 13.1]   change user color
[safari OS X 10.15 13.1]     -> PENDING: Color picker matches original color and remembers the user color after a 
[safari OS X 10.15 13.1]     refresh
[safari OS X 10.15 13.1]     -> PENDING: Own user color is shown when you enter a chat
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] change_user_name.js
[safari OS X 10.15 13.1]   change username value
[safari OS X 10.15 13.1]     -> PENDING: Remembers the user name after a refresh
[safari OS X 10.15 13.1]     -> PENDING: Own user name is shown when you enter a chat
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] chat.js
[safari OS X 10.15 13.1]   Chat messages and UI
[safari OS X 10.15 13.1]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[safari OS X 10.15 13.1]     -> PENDING: makes sure that an empty message can't be sent
[safari OS X 10.15 13.1]     -> PENDING: makes chat stick to right side of the screen
[safari OS X 10.15 13.1]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[safari OS X 10.15 13.1]     er
[safari OS X 10.15 13.1]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[safari OS X 10.15 13.1]      chat
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] chat_load_messages.js
[safari OS X 10.15 13.1]   chat-load-messages
[safari OS X 10.15 13.1]     -> PENDING: creates a pad
[safari OS X 10.15 13.1]     -> PENDING: adds a lot of messages
[safari OS X 10.15 13.1]     -> PENDING: checks initial message count
[safari OS X 10.15 13.1]     -> PENDING: loads more messages
[safari OS X 10.15 13.1]     -> PENDING: checks for button vanishing
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] clear_authorship_colors.js
[safari OS X 10.15 13.1]   clear authorship colors button
[safari OS X 10.15 13.1]     -> PASSED : makes text clear authorship colors   33 ms
[safari OS X 10.15 13.1]     -> PASSED : makes text clear authorship colors and checks it can't be undone   57 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] delete.js
[safari OS X 10.15 13.1]   delete keystroke
[safari OS X 10.15 13.1]     -> PENDING: makes text delete
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] drag_and_drop.js
[safari OS X 10.15 13.1]   drag and drop
[safari OS X 10.15 13.1]     when user drags part of one line and drops it far form its original place
[safari OS X 10.15 13.1]       and user triggers UNDO
[safari OS X 10.15 13.1]         -> PASSED : moves text back to its original place   2 ms
[safari OS X 10.15 13.1]     when user drags some lines far form its original place
[safari OS X 10.15 13.1]       and user triggers UNDO
[safari OS X 10.15 13.1]         -> PASSED : moves text back to its original place   1 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] embed_value.js
[safari OS X 10.15 13.1]   embed links
[safari OS X 10.15 13.1]     read and write
[safari OS X 10.15 13.1]       the share link
[safari OS X 10.15 13.1]         -> PASSED : is the actual pad url   5 ms
[safari OS X 10.15 13.1]       the embed as iframe code
[safari OS X 10.15 13.1]         -> PASSED : is an iframe with the the correct url parameters and correct size   6 ms
[safari OS X 10.15 13.1]     when read only option is set
[safari OS X 10.15 13.1]       the share link
[safari OS X 10.15 13.1]         -> PASSED : shows a read only url   6 ms
[safari OS X 10.15 13.1]       the embed as iframe code
[safari OS X 10.15 13.1]         -> PASSED : is an iframe with the the correct url parameters and correct size   10 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] enter.js
[safari OS X 10.15 13.1]   enter keystroke
[safari OS X 10.15 13.1]     -> PASSED : creates a new line & puts cursor onto a new line   27 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] font_type.js
[safari OS X 10.15 13.1]   font select
[safari OS X 10.15 13.1]     -> PENDING: makes text RobotoMono
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] helper.js
[safari OS X 10.15 13.1]   the test helper
[safari OS X 10.15 13.1]     the newPad method
[safari OS X 10.15 13.1]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[safari OS X 10.15 13.1]       -> FAILED : gives me 3 jquery instances of chrome, outer and inner Error: Error: Pad nev
[safari OS X 10.15 13.1]       er loaded (http://localhost:9001/tests/frontend/helper.js:143)
[safari OS X 10.15 13.1]       (http://localhost:9001/tests/frontend/lib/mocha.js:75)
[safari OS X 10.15 13.1]       -> PASSED : clears cookies   7285 ms
[safari OS X 10.15 13.1]       -> PASSED : sets pad prefs cookie   3129 ms
[safari OS X 10.15 13.1]     the waitFor method
[safari OS X 10.15 13.1]       -> PASSED : takes a timeout and waits long enough   1501 ms
[safari OS X 10.15 13.1]       -> PASSED : takes an interval and checks on every interval   2002 ms
[safari OS X 10.15 13.1]       returns a deferred object
[safari OS X 10.15 13.1]         -> PASSED : it calls done after success   11 ms
[safari OS X 10.15 13.1]         -> PASSED : calls fail after failure   1902 ms
[safari OS X 10.15 13.1]         -> PENDING: throws if you don't listen for fails
[safari OS X 10.15 13.1]     the selectLines method
[safari OS X 10.15 13.1]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[safari OS X 10.15 13.1]       fset of $endLine   2 ms
[safari OS X 10.15 13.1]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   1 ms
[safari OS X 10.15 13.1]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   1 ms
[safari OS X 10.15 13.1]       -> PASSED : selects full line when offset is longer than line content   1 ms
[safari OS X 10.15 13.1]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[safari OS X 10.15 13.1]       no offset is provided   1 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] importexport.js
[safari OS X 10.15 13.1]   import functionality
[safari OS X 10.15 13.1]     -> PENDING: import a pad with newlines from txt
[safari OS X 10.15 13.1]     -> PENDING: import a pad with newlines from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with attributes from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with bullets from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with bullets and newlines from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with bullets and newlines and attributes from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with nested bullets from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[safari OS X 10.15 13.1]     ml
[safari OS X 10.15 13.1]     -> PENDING: import a pad with ordered lists from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with ordered lists and newlines from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[safari OS X 10.15 13.1]     tml
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] importindents.js
[safari OS X 10.15 13.1]   import indents functionality
[safari OS X 10.15 13.1]     -> PENDING: import a pad with indents from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with indented lists and newlines from html
[safari OS X 10.15 13.1]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[safari OS X 10.15 13.1]     ml
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] indentation.js
[safari OS X 10.15 13.1]   indentation button
[safari OS X 10.15 13.1]     -> PASSED : indent text with keypress   20 ms
[safari OS X 10.15 13.1]     -> PASSED : indent text with button   18 ms
[safari OS X 10.15 13.1]     -> PASSED : keeps the indent on enter for the new line   525 ms
[safari OS X 10.15 13.1]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[safari OS X 10.15 13.1]     , or '{'   588 ms
[safari OS X 10.15 13.1]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[safari OS X 10.15 13.1]     ith ':', '[', '(', or '{'   44 ms
[safari OS X 10.15 13.1]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[safari OS X 10.15 13.1]      outdented   607 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] italic.js
[safari OS X 10.15 13.1]   italic some text
[safari OS X 10.15 13.1]     -> PENDING: makes text italic using button
[safari OS X 10.15 13.1]     -> PENDING: makes text italic using keypress
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] language.js
[safari OS X 10.15 13.1]   Language select and change
[safari OS X 10.15 13.1]     -> PASSED : makes text german   205 ms
[safari OS X 10.15 13.1]     -> PASSED : makes text English   32 ms
[safari OS X 10.15 13.1]     -> PASSED : changes direction when picking an rtl lang   250 ms
[safari OS X 10.15 13.1]     -> PASSED : changes direction when picking an ltr lang   35 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] multiple_authors_clear_authorship_colors.js
[safari OS X 10.15 13.1]   author of pad edition
[safari OS X 10.15 13.1]     -> PENDING: Clears Authorship by second user
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] ordered_list.js
[safari OS X 10.15 13.1]   assign ordered list
[safari OS X 10.15 13.1]     -> PASSED : inserts ordered list text   20 ms
[safari OS X 10.15 13.1]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[safari OS X 10.15 13.1]     PASTING INTO A PAD
[safari OS X 10.15 13.1]     when user presses Ctrl+Shift+N
[safari OS X 10.15 13.1]       and pad shortcut is enabled
[safari OS X 10.15 13.1]         -> PASSED : inserts unordered list   11 ms
[safari OS X 10.15 13.1]       and pad shortcut is disabled
[safari OS X 10.15 13.1]         -> PASSED : does not insert unordered list   1901 ms
[safari OS X 10.15 13.1]     when user presses Ctrl+Shift+1
[safari OS X 10.15 13.1]       and pad shortcut is enabled
[safari OS X 10.15 13.1]         -> PASSED : inserts unordered list   11 ms
[safari OS X 10.15 13.1]       and pad shortcut is disabled
[safari OS X 10.15 13.1]         -> PASSED : does not insert unordered list   1901 ms
[safari OS X 10.15 13.1]   Pressing Tab in an OL increases and decreases indentation
[safari OS X 10.15 13.1]     -> PASSED : indent and de-indent list item with keypress   32 ms
[safari OS X 10.15 13.1]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[safari OS X 10.15 13.1]   ng
[safari OS X 10.15 13.1]     -> PASSED : indent and de-indent list item with indent button   29 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] pad_modal.js
[safari OS X 10.15 13.1]   Pad modal
[safari OS X 10.15 13.1]     when modal is a "force reconnect" message
[safari OS X 10.15 13.1]       -> PASSED : disables editor   0 ms
[safari OS X 10.15 13.1]       and user clicks on editor
[safari OS X 10.15 13.1]         -> PASSED : does not close the modal   1 ms
[safari OS X 10.15 13.1]       and user clicks on pad outer
[safari OS X 10.15 13.1]         -> PASSED : does not close the modal   1 ms
[safari OS X 10.15 13.1]     when modal is not an error message
[safari OS X 10.15 13.1]       and user clicks on editor
[safari OS X 10.15 13.1]         -> PASSED : closes the modal   1 ms
[safari OS X 10.15 13.1]       and user clicks on pad outer
[safari OS X 10.15 13.1]         -> PASSED : closes the modal   1 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] redo.js
[safari OS X 10.15 13.1]   undo button then redo button
[safari OS X 10.15 13.1]     -> PASSED : redo some typing with button   37 ms
[safari OS X 10.15 13.1]     -> PASSED : redo some typing with keypress   25 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] responsiveness.js
[safari OS X 10.15 13.1]   Responsiveness of Editor
[safari OS X 10.15 13.1]     -> PENDING: Fast response to keypress in pad with large amount of contents
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] select_formatting_buttons.js
[safari OS X 10.15 13.1]   select formatting buttons when selection has style applied
[safari OS X 10.15 13.1]     when selection is in a text with italic applied
[safari OS X 10.15 13.1]       -> PENDING: selects the italic button
[safari OS X 10.15 13.1]     when caret is in a position with italic applied
[safari OS X 10.15 13.1]       -> PENDING: selects the italic button
[safari OS X 10.15 13.1]     when selection is in a text with bold applied
[safari OS X 10.15 13.1]       -> PENDING: selects the bold button
[safari OS X 10.15 13.1]     when caret is in a position with bold applied
[safari OS X 10.15 13.1]       -> PENDING: selects the bold button
[safari OS X 10.15 13.1]     when selection is in a text with underline applied
[safari OS X 10.15 13.1]       -> PENDING: selects the underline button
[safari OS X 10.15 13.1]     when caret is in a position with underline applied
[safari OS X 10.15 13.1]       -> PENDING: selects the underline button
[safari OS X 10.15 13.1]     when selection is in a text with strikethrough applied
[safari OS X 10.15 13.1]       -> PENDING: selects the strikethrough button
[safari OS X 10.15 13.1]     when caret is in a position with strikethrough applied
[safari OS X 10.15 13.1]       -> PENDING: selects the strikethrough button
[safari OS X 10.15 13.1]     when user applies a style and the selection does not change
[safari OS X 10.15 13.1]       -> PENDING: selects the style button
[safari OS X 10.15 13.1]     when user presses CMD + I
[safari OS X 10.15 13.1]       -> PENDING: selects the italic button
[safari OS X 10.15 13.1]       and user presses CMD + I again
[safari OS X 10.15 13.1]         -> PENDING: deselects the italic button
[safari OS X 10.15 13.1]     when user presses CMD + B
[safari OS X 10.15 13.1]       -> PENDING: selects the bold button
[safari OS X 10.15 13.1]       and user presses CMD + B again
[safari OS X 10.15 13.1]         -> PENDING: deselects the bold button
[safari OS X 10.15 13.1]     when user presses CMD + U
[safari OS X 10.15 13.1]       -> PENDING: selects the underline button
[safari OS X 10.15 13.1]       and user presses CMD + U again
[safari OS X 10.15 13.1]         -> PENDING: deselects the underline button
[safari OS X 10.15 13.1]     when user presses CMD + 5
[safari OS X 10.15 13.1]       -> PENDING: selects the strikethrough button
[safari OS X 10.15 13.1]       and user presses CMD + 5 again
[safari OS X 10.15 13.1]         -> PENDING: deselects the strikethrough button
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] strikethrough.js
[safari OS X 10.15 13.1]   strikethrough button
[safari OS X 10.15 13.1]     -> PASSED : makes text strikethrough   7 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] timeslider.js
[safari OS X 10.15 13.1]   timeslider button takes you to the timeslider of a pad
[safari OS X 10.15 13.1]     -> PENDING: timeslider contained in URL
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] timeslider_follow.js
[safari OS X 10.15 13.1]   timeslider
[safari OS X 10.15 13.1]     -> PASSED : follow content as it's added to timeslider   12011 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] timeslider_labels.js
[safari OS X 10.15 13.1]   timeslider
[safari OS X 10.15 13.1]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[safari OS X 10.15 13.1]     NaN
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] timeslider_numeric_padID.js
[safari OS X 10.15 13.1]   timeslider
[safari OS X 10.15 13.1]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   441
[safari OS X 10.15 13.1]     8 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] timeslider_revisions.js
[safari OS X 10.15 13.1]   timeslider
[safari OS X 10.15 13.1]     -> PASSED : loads adds a hundred revisions   96124 ms
[safari OS X 10.15 13.1]     -> PENDING: changes the url when clicking on the timeslider
[safari OS X 10.15 13.1]     -> PASSED : jumps to a revision given in the url   2536 ms
[safari OS X 10.15 13.1]     -> PASSED : checks the export url   4385 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] undo.js
[safari OS X 10.15 13.1]   undo button
[safari OS X 10.15 13.1]     -> PENDING: undo some typing by clicking undo button
[safari OS X 10.15 13.1]     -> PENDING: undo some typing using a keypress
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] unordered_list.js
[safari OS X 10.15 13.1]   assign unordered list
[safari OS X 10.15 13.1]     -> PENDING: insert unordered list text then removes by outdent
[safari OS X 10.15 13.1]   unassign unordered list
[safari OS X 10.15 13.1]     -> PASSED : insert unordered list text then remove by clicking list again   46 ms
[safari OS X 10.15 13.1]   keep unordered list on enter key
[safari OS X 10.15 13.1]     -> PASSED : Keeps the unordered list on enter for the new line   539 ms
[safari OS X 10.15 13.1]   Pressing Tab in an UL increases and decreases indentation
[safari OS X 10.15 13.1]     -> PASSED : indent and de-indent list item with keypress   43 ms
[safari OS X 10.15 13.1]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[safari OS X 10.15 13.1]   ng
[safari OS X 10.15 13.1]     -> PASSED : indent and de-indent list item with indent button   29 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] urls_become_clickable.js
[safari OS X 10.15 13.1]   urls
[safari OS X 10.15 13.1]     -> PASSED : when you enter an url, it becomes clickable   573 ms
[safari OS X 10.15 13.1]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[safari OS X 10.15 13.1]      whole URL   42 ms
[safari OS X 10.15 13.1]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   5
[safari OS X 10.15 13.1]     28 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] xxauto_reconnect.js
[safari OS X 10.15 13.1]   Automatic pad reload on Force Reconnect message
[safari OS X 10.15 13.1]     -> PASSED : displays a count down timer to automatically reconnect   1 ms
[safari OS X 10.15 13.1]     and user clicks on Cancel
[safari OS X 10.15 13.1]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" is th
[safari OS X 10.15 13.1]       is caught?
[safari OS X 10.15 13.1]       http://localhost:9001/tests/frontend/:38:20
[safari OS X 10.15 13.1]     and user does not click on Cancel until timer expires
[safari OS X 10.15 13.1]       -> PASSED : reloads the pad   2243 ms
[safari OS X 10.15 13.1] 
[safari OS X 10.15 13.1] FINISHED - 62 tests passed, 2 tests failed, 63  pending, duration: 5:20
[safari OS X 10.15 13.1] 
Remote sauce test '291c596 - safari 13.1, OS X 10.15' finished! https://saucelabs.com/jobs/de7e20b66fb1427cb8805db02f0d4bc0
[safari OS X 10.14 12.0] alphabet.js
[safari OS X 10.14 12.0]   All the alphabet works n stuff
[safari OS X 10.14 12.0]     -> PASSED : when you enter any char it appears right   39 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] authorship_of_editions.js
[safari OS X 10.14 12.0]   author of pad edition
[safari OS X 10.14 12.0]     -> PENDING: marks only the new content as changes of the second user on a regular lin
[safari OS X 10.14 12.0]     e
[safari OS X 10.14 12.0]     -> PENDING: marks only the new content as changes of the second user on a line with o
[safari OS X 10.14 12.0]     rdered list
[safari OS X 10.14 12.0]     -> PENDING: marks only the new content as changes of the second user on a line with u
[safari OS X 10.14 12.0]     nordered list
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] bold.js
[safari OS X 10.14 12.0]   bold button
[safari OS X 10.14 12.0]     -> PASSED : makes text bold on click   20 ms
[safari OS X 10.14 12.0]     -> PASSED : makes text bold on keypress   10 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] change_user_color.js
[safari OS X 10.14 12.0]   change user color
[safari OS X 10.14 12.0]     -> PENDING: Color picker matches original color and remembers the user color after a 
[safari OS X 10.14 12.0]     refresh
[safari OS X 10.14 12.0]     -> PENDING: Own user color is shown when you enter a chat
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] change_user_name.js
[safari OS X 10.14 12.0]   change username value
[safari OS X 10.14 12.0]     -> PENDING: Remembers the user name after a refresh
[safari OS X 10.14 12.0]     -> PENDING: Own user name is shown when you enter a chat
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] chat.js
[safari OS X 10.14 12.0]   Chat messages and UI
[safari OS X 10.14 12.0]     -> PENDING: opens chat, sends a message and makes sure it exists on the page
[safari OS X 10.14 12.0]     -> PENDING: makes sure that an empty message can't be sent
[safari OS X 10.14 12.0]     -> PENDING: makes chat stick to right side of the screen
[safari OS X 10.14 12.0]     -> PENDING: makes chat stick to right side of the screen then makes it one step small
[safari OS X 10.14 12.0]     er
[safari OS X 10.14 12.0]     -> PENDING: Checks showChat=false URL Parameter hides chat then when removed it shows
[safari OS X 10.14 12.0]      chat
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] chat_load_messages.js
[safari OS X 10.14 12.0]   chat-load-messages
[safari OS X 10.14 12.0]     -> PENDING: creates a pad
[safari OS X 10.14 12.0]     -> PENDING: adds a lot of messages
[safari OS X 10.14 12.0]     -> PENDING: checks initial message count
[safari OS X 10.14 12.0]     -> PENDING: loads more messages
[safari OS X 10.14 12.0]     -> PENDING: checks for button vanishing
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] clear_authorship_colors.js
[safari OS X 10.14 12.0]   clear authorship colors button
[safari OS X 10.14 12.0]     -> PASSED : makes text clear authorship colors   40 ms
[safari OS X 10.14 12.0]     -> PASSED : makes text clear authorship colors and checks it can't be undone   41 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] delete.js
[safari OS X 10.14 12.0]   delete keystroke
[safari OS X 10.14 12.0]     -> PENDING: makes text delete
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] drag_and_drop.js
[safari OS X 10.14 12.0]   drag and drop
[safari OS X 10.14 12.0]     when user drags part of one line and drops it far form its original place
[safari OS X 10.14 12.0]       and user triggers UNDO
[safari OS X 10.14 12.0]         -> PASSED : moves text back to its original place   2 ms
[safari OS X 10.14 12.0]     when user drags some lines far form its original place
[safari OS X 10.14 12.0]       and user triggers UNDO
[safari OS X 10.14 12.0]         -> PASSED : moves text back to its original place   1 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] embed_value.js
[safari OS X 10.14 12.0]   embed links
[safari OS X 10.14 12.0]     read and write
[safari OS X 10.14 12.0]       the share link
[safari OS X 10.14 12.0]         -> PASSED : is the actual pad url   8 ms
[safari OS X 10.14 12.0]       the embed as iframe code
[safari OS X 10.14 12.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   11 ms
[safari OS X 10.14 12.0]     when read only option is set
[safari OS X 10.14 12.0]       the share link
[safari OS X 10.14 12.0]         -> PASSED : shows a read only url   8 ms
[safari OS X 10.14 12.0]       the embed as iframe code
[safari OS X 10.14 12.0]         -> PASSED : is an iframe with the the correct url parameters and correct size   10 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] enter.js
[safari OS X 10.14 12.0]   enter keystroke
[safari OS X 10.14 12.0]     -> PASSED : creates a new line & puts cursor onto a new line   18 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] font_type.js
[safari OS X 10.14 12.0]   font select
[safari OS X 10.14 12.0]     -> PENDING: makes text RobotoMono
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] helper.js
[safari OS X 10.14 12.0]   the test helper
[safari OS X 10.14 12.0]     the newPad method
[safari OS X 10.14 12.0]       -> PENDING: doesn't leak memory if you creates iframes over and over again
[safari OS X 10.14 12.0]       -> FAILED : gives me 3 jquery instances of chrome, outer and inner Error: Error: Pad nev
[safari OS X 10.14 12.0]       er loaded (http://localhost:9001/tests/frontend/helper.js:143)
[safari OS X 10.14 12.0]       (http://localhost:9001/tests/frontend/lib/mocha.js:75)
[safari OS X 10.14 12.0]       -> PASSED : clears cookies   7246 ms
[safari OS X 10.14 12.0]       -> PASSED : sets pad prefs cookie   3125 ms
[safari OS X 10.14 12.0]     the waitFor method
[safari OS X 10.14 12.0]       -> PASSED : takes a timeout and waits long enough   1502 ms
[safari OS X 10.14 12.0]       -> PASSED : takes an interval and checks on every interval   2003 ms
[safari OS X 10.14 12.0]       returns a deferred object
[safari OS X 10.14 12.0]         -> PASSED : it calls done after success   14 ms
[safari OS X 10.14 12.0]         -> PASSED : calls fail after failure   1901 ms
[safari OS X 10.14 12.0]         -> PENDING: throws if you don't listen for fails
[safari OS X 10.14 12.0]     the selectLines method
[safari OS X 10.14 12.0]       -> PASSED : changes editor selection to be between startOffset of $startLine and endOf
[safari OS X 10.14 12.0]       fset of $endLine   3 ms
[safari OS X 10.14 12.0]       -> PASSED : ends selection at beginning of $endLine when it is an empty line   2 ms
[safari OS X 10.14 12.0]       -> PASSED : ends selection at beginning of $endLine when its offset is zero   2 ms
[safari OS X 10.14 12.0]       -> PASSED : selects full line when offset is longer than line content   1 ms
[safari OS X 10.14 12.0]       -> PASSED : selects all text between beginning of $startLine and end of $endLine when 
[safari OS X 10.14 12.0]       no offset is provided   2 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] importexport.js
[safari OS X 10.14 12.0]   import functionality
[safari OS X 10.14 12.0]     -> PENDING: import a pad with newlines from txt
[safari OS X 10.14 12.0]     -> PENDING: import a pad with newlines from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with attributes from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with bullets from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with bullets and newlines from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with bullets and newlines and attributes from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with nested bullets from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with 8 levels of bullets and newlines and attributes from ht
[safari OS X 10.14 12.0]     ml
[safari OS X 10.14 12.0]     -> PENDING: import a pad with ordered lists from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with ordered lists and newlines from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with nested ordered lists and attributes and newlines from h
[safari OS X 10.14 12.0]     tml
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] importindents.js
[safari OS X 10.14 12.0]   import indents functionality
[safari OS X 10.14 12.0]     -> PENDING: import a pad with indents from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with indented lists and newlines from html
[safari OS X 10.14 12.0]     -> PENDING: import a pad with 8 levels of indents and newlines and attributes from ht
[safari OS X 10.14 12.0]     ml
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] indentation.js
[safari OS X 10.14 12.0]   indentation button
[safari OS X 10.14 12.0]     -> PASSED : indent text with keypress   25 ms
[safari OS X 10.14 12.0]     -> PASSED : indent text with button   31 ms
[safari OS X 10.14 12.0]     -> PASSED : keeps the indent on enter for the new line   541 ms
[safari OS X 10.14 12.0]     -> PASSED : indents text with spaces on enter if previous line ends with ':', '[', '('
[safari OS X 10.14 12.0]     , or '{'   115 ms
[safari OS X 10.14 12.0]     -> PASSED : appends indentation to the indent of previous line if previous line ends w
[safari OS X 10.14 12.0]     ith ':', '[', '(', or '{'   50 ms
[safari OS X 10.14 12.0]     -> PASSED : issue #2772 shows '*' when multiple indented lines receive a style and are
[safari OS X 10.14 12.0]      outdented   111 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] italic.js
[safari OS X 10.14 12.0]   italic some text
[safari OS X 10.14 12.0]     -> PENDING: makes text italic using button
[safari OS X 10.14 12.0]     -> PENDING: makes text italic using keypress
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] language.js
[safari OS X 10.14 12.0]   Language select and change
[safari OS X 10.14 12.0]     -> PASSED : makes text german   431 ms
[safari OS X 10.14 12.0]     -> PASSED : makes text English   56 ms
[safari OS X 10.14 12.0]     -> PASSED : changes direction when picking an rtl lang   295 ms
[safari OS X 10.14 12.0]     -> PASSED : changes direction when picking an ltr lang   71 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] multiple_authors_clear_authorship_colors.js
[safari OS X 10.14 12.0]   author of pad edition
[safari OS X 10.14 12.0]     -> PENDING: Clears Authorship by second user
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] ordered_list.js
[safari OS X 10.14 12.0]   assign ordered list
[safari OS X 10.14 12.0]     -> PASSED : inserts ordered list text   25 ms
[safari OS X 10.14 12.0]     -> PENDING: issue #1125 keeps the numbered list on enter for the new line - EMULATES 
[safari OS X 10.14 12.0]     PASTING INTO A PAD
[safari OS X 10.14 12.0]     when user presses Ctrl+Shift+N
[safari OS X 10.14 12.0]       and pad shortcut is enabled
[safari OS X 10.14 12.0]         -> PASSED : inserts unordered list   12 ms
[safari OS X 10.14 12.0]       and pad shortcut is disabled
[safari OS X 10.14 12.0]         -> PASSED : does not insert unordered list   1900 ms
[safari OS X 10.14 12.0]     when user presses Ctrl+Shift+1
[safari OS X 10.14 12.0]       and pad shortcut is enabled
[safari OS X 10.14 12.0]         -> PASSED : inserts unordered list   14 ms
[safari OS X 10.14 12.0]       and pad shortcut is disabled
[safari OS X 10.14 12.0]         -> PASSED : does not insert unordered list   1901 ms
[safari OS X 10.14 12.0]   Pressing Tab in an OL increases and decreases indentation
[safari OS X 10.14 12.0]     -> PASSED : indent and de-indent list item with keypress   36 ms
[safari OS X 10.14 12.0]   Pressing indent/outdent button in an OL increases and decreases indentation and bullet / ol formatti
[safari OS X 10.14 12.0]   ng
[safari OS X 10.14 12.0]     -> PASSED : indent and de-indent list item with indent button   38 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] pad_modal.js
[safari OS X 10.14 12.0]   Pad modal
[safari OS X 10.14 12.0]     when modal is a "force reconnect" message
[safari OS X 10.14 12.0]       -> PASSED : disables editor   1 ms
[safari OS X 10.14 12.0]       and user clicks on editor
[safari OS X 10.14 12.0]         -> PASSED : does not close the modal   1 ms
[safari OS X 10.14 12.0]       and user clicks on pad outer
[safari OS X 10.14 12.0]         -> PASSED : does not close the modal   1 ms
[safari OS X 10.14 12.0]     when modal is not an error message
[safari OS X 10.14 12.0]       and user clicks on editor
[safari OS X 10.14 12.0]         -> PASSED : closes the modal   1 ms
[safari OS X 10.14 12.0]       and user clicks on pad outer
[safari OS X 10.14 12.0]         -> PASSED : closes the modal   1 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] redo.js
[safari OS X 10.14 12.0]   undo button then redo button
[safari OS X 10.14 12.0]     -> PASSED : redo some typing with button   47 ms
[safari OS X 10.14 12.0]     -> PASSED : redo some typing with keypress   32 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] responsiveness.js
[safari OS X 10.14 12.0]   Responsiveness of Editor
[safari OS X 10.14 12.0]     -> PENDING: Fast response to keypress in pad with large amount of contents
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] select_formatting_buttons.js
[safari OS X 10.14 12.0]   select formatting buttons when selection has style applied
[safari OS X 10.14 12.0]     when selection is in a text with italic applied
[safari OS X 10.14 12.0]       -> PENDING: selects the italic button
[safari OS X 10.14 12.0]     when caret is in a position with italic applied
[safari OS X 10.14 12.0]       -> PENDING: selects the italic button
[safari OS X 10.14 12.0]     when selection is in a text with bold applied
[safari OS X 10.14 12.0]       -> PENDING: selects the bold button
[safari OS X 10.14 12.0]     when caret is in a position with bold applied
[safari OS X 10.14 12.0]       -> PENDING: selects the bold button
[safari OS X 10.14 12.0]     when selection is in a text with underline applied
[safari OS X 10.14 12.0]       -> PENDING: selects the underline button
[safari OS X 10.14 12.0]     when caret is in a position with underline applied
[safari OS X 10.14 12.0]       -> PENDING: selects the underline button
[safari OS X 10.14 12.0]     when selection is in a text with strikethrough applied
[safari OS X 10.14 12.0]       -> PENDING: selects the strikethrough button
[safari OS X 10.14 12.0]     when caret is in a position with strikethrough applied
[safari OS X 10.14 12.0]       -> PENDING: selects the strikethrough button
[safari OS X 10.14 12.0]     when user applies a style and the selection does not change
[safari OS X 10.14 12.0]       -> PENDING: selects the style button
[safari OS X 10.14 12.0]     when user presses CMD + I
[safari OS X 10.14 12.0]       -> PENDING: selects the italic button
[safari OS X 10.14 12.0]       and user presses CMD + I again
[safari OS X 10.14 12.0]         -> PENDING: deselects the italic button
[safari OS X 10.14 12.0]     when user presses CMD + B
[safari OS X 10.14 12.0]       -> PENDING: selects the bold button
[safari OS X 10.14 12.0]       and user presses CMD + B again
[safari OS X 10.14 12.0]         -> PENDING: deselects the bold button
[safari OS X 10.14 12.0]     when user presses CMD + U
[safari OS X 10.14 12.0]       -> PENDING: selects the underline button
[safari OS X 10.14 12.0]       and user presses CMD + U again
[safari OS X 10.14 12.0]         -> PENDING: deselects the underline button
[safari OS X 10.14 12.0]     when user presses CMD + 5
[safari OS X 10.14 12.0]       -> PENDING: selects the strikethrough button
[safari OS X 10.14 12.0]       and user presses CMD + 5 again
[safari OS X 10.14 12.0]         -> PENDING: deselects the strikethrough button
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] strikethrough.js
[safari OS X 10.14 12.0]   strikethrough button
[safari OS X 10.14 12.0]     -> PASSED : makes text strikethrough   10 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] timeslider.js
[safari OS X 10.14 12.0]   timeslider button takes you to the timeslider of a pad
[safari OS X 10.14 12.0]     -> PENDING: timeslider contained in URL
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] timeslider_follow.js
[safari OS X 10.14 12.0]   timeslider
[safari OS X 10.14 12.0]     -> PASSED : follow content as it's added to timeslider   12092 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] timeslider_labels.js
[safari OS X 10.14 12.0]   timeslider
[safari OS X 10.14 12.0]     -> PENDING: Shows a date and time in the timeslider and make sure it doesn't include 
[safari OS X 10.14 12.0]     NaN
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] timeslider_numeric_padID.js
[safari OS X 10.14 12.0]   timeslider
[safari OS X 10.14 12.0]     -> PASSED : Makes sure the export URIs are as expected when the padID is numeric   441
[safari OS X 10.14 12.0]     9 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] timeslider_revisions.js
[safari OS X 10.14 12.0]   timeslider
[safari OS X 10.14 12.0]     -> PASSED : loads adds a hundred revisions   96125 ms
[safari OS X 10.14 12.0]     -> PENDING: changes the url when clicking on the timeslider
[safari OS X 10.14 12.0]     -> PASSED : jumps to a revision given in the url   2679 ms
[safari OS X 10.14 12.0]     -> PASSED : checks the export url   4544 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] undo.js
[safari OS X 10.14 12.0]   undo button
[safari OS X 10.14 12.0]     -> PENDING: undo some typing by clicking undo button
[safari OS X 10.14 12.0]     -> PENDING: undo some typing using a keypress
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] unordered_list.js
[safari OS X 10.14 12.0]   assign unordered list
[safari OS X 10.14 12.0]     -> PENDING: insert unordered list text then removes by outdent
[safari OS X 10.14 12.0]   unassign unordered list
[safari OS X 10.14 12.0]     -> PASSED : insert unordered list text then remove by clicking list again   35 ms
[safari OS X 10.14 12.0]   keep unordered list on enter key
[safari OS X 10.14 12.0]     -> PASSED : Keeps the unordered list on enter for the new line   34 ms
[safari OS X 10.14 12.0]   Pressing Tab in an UL increases and decreases indentation
[safari OS X 10.14 12.0]     -> PASSED : indent and de-indent list item with keypress   41 ms
[safari OS X 10.14 12.0]   Pressing indent/outdent button in an UL increases and decreases indentation and bullet / ol formatti
[safari OS X 10.14 12.0]   ng
[safari OS X 10.14 12.0]     -> PASSED : indent and de-indent list item with indent button   34 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] urls_become_clickable.js
[safari OS X 10.14 12.0]   urls
[safari OS X 10.14 12.0]     -> PASSED : when you enter an url, it becomes clickable   524 ms
[safari OS X 10.14 12.0]     -> PASSED : when you enter a url containing a !, it becomes clickable and contains the
[safari OS X 10.14 12.0]      whole URL   530 ms
[safari OS X 10.14 12.0]     -> PASSED : when you enter a url followed by a ], the ] is not included in the URL   5
[safari OS X 10.14 12.0]     32 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] xxauto_reconnect.js
[safari OS X 10.14 12.0]   Automatic pad reload on Force Reconnect message
[safari OS X 10.14 12.0]     -> PASSED : displays a count down timer to automatically reconnect   1 ms
[safari OS X 10.14 12.0]     and user clicks on Cancel
[safari OS X 10.14 12.0]       -> FAILED : "before each" hook for "does not show Cancel button nor timer anymore" is th
[safari OS X 10.14 12.0]       is caught?
[safari OS X 10.14 12.0]       http://localhost:9001/tests/frontend/:38:20
[safari OS X 10.14 12.0]     and user does not click on Cancel until timer expires
[safari OS X 10.14 12.0]       -> PASSED : reloads the pad   2241 ms
[safari OS X 10.14 12.0] 
[safari OS X 10.14 12.0] FINISHED - 62 tests passed, 2 tests failed, 63  pending, duration: 5:28
[safari OS X 10.14 12.0] 
Remote sauce test '291c596 - safari 12.0, OS X 10.14' finished! https://saucelabs.com/jobs/014b75cbdfa64dbaab6e5b483de50d83
travis_time:end:0c804970:start=1595725821892208269,finish=1595726165446656162,duration=343554447893,event=scriptThe command "tests/frontend/travis/runner.sh" exited with 1.


Done. Your build exited with 1.
