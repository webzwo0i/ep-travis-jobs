travis_fold:start:worker_infoWorker information
hostname: 0b156e8d-baac-4a4d-b33d-e17e351ca43c@1.worker-org-77db9856dc-f75tm.gce-production-3
version: v6.2.17 https://github.com/travis-ci/worker/tree/bc420764f334fe0d096a417c80426f672f1b7d18
instance: travis-job-234bebbc-b4cb-4834-8e56-0765f16ce370 travis-ci-sardonyx-xenial-1593004276-4d46c6b3 (via amqp)
startup: 6.234973882s
travis_fold:end:worker_infoe:start:1b4f43a0e:end:1b4f43a0:start=1601334753138700555,finish=1601334753292932185,duration=154231630,event=no_world_writable_dirse:start:1bb138b2e:end:1bb138b2:start=1601334753296127157,finish=1601334753299189020,duration=3061863,event=setup_filtere:start:1907a758e:end:1907a758:start=1601334753303440568,finish=1601334753313014632,duration=9574064,event=agente:start:05a72e14e:end:05a72e14:start=1601334753316070067,finish=1601334753318184032,duration=2113965,event=check_unsupportede:start:0032f1f4_infoBuild system information
Build language: node_js
Build dist: xenial
Build id: 731121999
Job id: 731122001
Runtime kernel version: 4.15.0-1077-gcp
travis-build version: 68cdc09f
Build image provisioning date and time
Wed Jun 24 13:36:52 UTC 2020
Operating System Details
Distributor ID:Ubuntu
Description:Ubuntu 16.04.6 LTS
Release:16.04
Codename:xenial
Systemd Version
systemd 229
Cookbooks Version
3f92a99 https://github.com/travis-ci/travis-cookbooks/tree/3f92a99
git version
git version 2.27.0
bash version
GNU bash, version 4.3.48(1)-release (x86_64-pc-linux-gnu)
gcc version
gcc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609
docker version
Client:
 Version:           18.06.0-ce
 API version:       1.38
 Go version:        go1.10.3
 Git commit:        0ffa825
 Built:             Wed Jul 18 19:11:02 2018
 OS/Arch:           linux/amd64
 Experimental:      false

Server:
 Engine:
  Version:          18.06.0-ce
  API version:      1.38 (minimum version 1.12)
  Go version:       go1.10.3
  Git commit:       0ffa825
  Built:            Wed Jul 18 19:09:05 2018
  OS/Arch:          linux/amd64
  Experimental:     false
clang version
clang version 7.0.0 (tags/RELEASE_700/final)
jq version
jq-1.5
bats version
Bats 0.4.0
shellcheck version
0.7.0
shfmt version
v2.6.3
ccache version
3.2.4
cmake version
cmake version 3.12.4
heroku version
heroku/7.42.1 linux-x64 node-v12.16.2
imagemagick version
Version: ImageMagick 6.8.9-9 Q16 x86_64 2019-11-12 http://www.imagemagick.org
md5deep version
4.4
mercurial version
version 4.8
mysql version
mysql  Ver 14.14 Distrib 5.7.30, for Linux (x86_64) using  EditLine wrapper
openssl version
OpenSSL 1.0.2g  1 Mar 2016
packer version
1.3.3
postgresql client version
psql (PostgreSQL) 10.13 (Ubuntu 10.13-1.pgdg16.04+1)
ragel version
Ragel State Machine Compiler version 6.8 Feb 2013
sudo version
1.8.16
gzip version
gzip 1.6
zip version
Zip 3.0
vim version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Mar 18 2020 14:06:17)
iptables version
iptables v1.6.0
curl version
curl 7.47.0 (x86_64-pc-linux-gnu) libcurl/7.47.0 GnuTLS/3.4.10 zlib/1.2.8 libidn/1.32 librtmp/2.3
wget version
GNU Wget 1.17.1 built on linux-gnu.
rsync version
rsync  version 3.1.1  protocol version 31
gimme version
v1.5.4
nvm version
0.35.3
perlbrew version
/home/travis/perl5/perlbrew/bin/perlbrew  - App::perlbrew/0.88
phpenv version
rbenv 1.1.2-30-gc879cb0
rvm version
rvm 1.29.10 (latest) by Michal Papis, Piotr Kuczynski, Wayne E. Seguin [https://rvm.io]
default ruby version
ruby 2.5.3p105 (2018-10-18 revision 65156) [x86_64-linux]
CouchDB version
couchdb 1.6.1
ElasticSearch version
5.5.0
Installed Firefox version
firefox 63.0.1
MongoDB version
MongoDB 4.0.19
PhantomJS version
2.1.1
Pre-installed PostgreSQL versions
9.4.26
9.5.22
9.6.18
Redis version
redis-server 6.0.5
Pre-installed Go versions
1.11.1
ant version
Apache Ant(TM) version 1.9.6 compiled on July 20 2018
mvn version
Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)
gradle version
Gradle 5.1.1!
lein version
Leiningen 2.9.3 on Java 11.0.2 OpenJDK 64-Bit Server VM
Pre-installed Node.js versions
v10.21.0
v11.0.0
v12.18.1
v4.9.1
v6.17.1
v8.12.0
v8.17.0
v8.9
phpenv versions
  system
  5.6
  5.6.40
  7.1
  7.1.27
  7.2
* 7.2.15 (set by /home/travis/.phpenv/version)
  hhvm
  hhvm-stable
composer --version
Composer version 1.8.4 2019-02-11 10:52:10
Pre-installed Ruby versions
ruby-2.3.8
ruby-2.4.5
ruby-2.5.3
travis_fold:end:system_infoe:end:0032f1f4:start=1601334753321217989,finish=1601334753327031935,duration=5813946,event=show_system_infoe:start:05d3e32ee:end:05d3e32e:start=1601334753331171407,finish=1601334753348277358,duration=17105951,event=rm_riak_sourcee:start:12cabcc6e:end:12cabcc6:start=1601334753352094744,finish=1601334753358679203,duration=6584459,event=fix_rwky_redise:start:03b61e27e:end:03b61e27:start=1601334753362466268,finish=1601334754091660044,duration=729193776,event=wait_for_networke:start:092abc10e:end:092abc10:start=1601334754097114462,finish=1601334754335911478,duration=238797016,event=update_apt_keyse:start:05f37d20e:end:05f37d20:start=1601334754340577451,finish=1601334754393129520,duration=52552069,event=fix_hhvm_sourcee:start:14537b36e:end:14537b36:start=1601334754397616889,finish=1601334754400613066,duration=2996177,event=update_mongo_arche:start:1e87d048e:end:1e87d048:start=1601334754404973793,finish=1601334754445221248,duration=40247455,event=fix_sudo_enabled_trustye:start:2a2cd766e:end:2a2cd766:start=1601334754449625178,finish=1601334754452017306,duration=2392128,event=update_glibce:start:05e8ccc0e:end:05e8ccc0:start=1601334754455698251,finish=1601334754464454849,duration=8756598,event=clean_up_pathe:start:01e1f8cee:end:01e1f8ce:start=1601334754468305115,finish=1601334754476191982,duration=7886867,event=fix_resolv_confe:start:240c7318e:end:240c7318:start=1601334754480077998,finish=1601334754489149296,duration=9071298,event=fix_etc_hostse:start:0e88ffc3e:end:0e88ffc3:start=1601334754492729917,finish=1601334754502605781,duration=9875864,event=fix_mvn_settings_xmle:start:0ff60375e:end:0ff60375:start=1601334754507959501,finish=1601334754517249161,duration=9289660,event=no_ipv6_localhoste:start:00b03bb0e:end:00b03bb0:start=1601334754521022299,finish=1601334754523293645,duration=2271346,event=fix_etc_mavenrce:start:0e4d251ce:end:0e4d251c:start=1601334754527192204,finish=1601334754530244950,duration=3052746,event=fix_wwdr_certificatee:start:00406c17e:end:00406c17:start=1601334754533888730,finish=1601334754558473048,duration=24584318,event=put_localhost_firste:start:1fccd014e:end:1fccd014:start=1601334754562874103,finish=1601334754566051038,duration=3176935,event=home_pathse:start:066309c0e:end:066309c0:start=1601334754570350650,finish=1601334754582532042,duration=12181392,event=disable_initramfse:start:00795180e:end:00795180:start=1601334754586258064,finish=1601334754949115291,duration=362857227,event=disable_ssh_roaminge:start:1d02574ae:end:1d02574a:start=1601334754953895268,finish=1601334754957011086,duration=3115818,event=debug_toolse:start:1e0f1e10e:end:1e0f1e10:start=1601334754961421868,finish=1601334754965220168,duration=3798300,event=uninstall_oclinte:start:0100de70e:end:0100de70:start=1601334754969578374,finish=1601334754973402598,duration=3824224,event=rvm_usee:start:0651e122e:end:0651e122:start=1601334754978093822,finish=1601334754989796214,duration=11702392,event=rm_etc_boto_cfge:start:3a26db29e:end:3a26db29:start=1601334754995860357,finish=1601334755000095274,duration=4234917,event=rm_oraclejdk8_symlinke:start:1e7a2c2ce:end:1e7a2c2c:start=1601334755004554961,finish=1601334755100786615,duration=96231654,event=enable_i386e:start:0cb277c0e:end:0cb277c0:start=1601334755105281227,finish=1601334755111792858,duration=6511631,event=update_rubygemse:start:1817edf4e:end:1817edf4:start=1601334755116195792,finish=1601334755969055837,duration=852860045,event=ensure_path_componentse:start:0fa0a919e:end:0fa0a919:start=1601334755973980506,finish=1601334755976690796,duration=2710290,event=redefine_curle:start:08900cb4e:end:08900cb4:start=1601334755980991171,finish=1601334756084276188,duration=103285017,event=nonblock_pipee:start:2a300096e:end:2a300096:start=1601334756088182173,finish=1601334762121607787,duration=6033425614,event=apt_get_updatee:start:037d170ee:end:037d170e:start=1601334762126264785,finish=1601334762128736023,duration=2471238,event=deprecate_xcode_64e:start:18ca7124e:end:18ca7124:start=1601334762133628863,finish=1601334764971739999,duration=2838111136,event=update_herokue:start:2b507620e:end:2b507620:start=1601334764976193383,finish=1601334764978730868,duration=2537485,event=shell_session_updatee:start:06cf0480tutue:end:06cf0480:start=1601334764982345579,finish=1601334767420246895,duration=2437901316,event=set_docker_mtue:start:0224d252e:end:0224d252:start=1601334767425597543,finish=1601334767495191324,duration=69593781,event=resolvconfe:start:0193f187e:end:0193f187:start=1601334767504845140,finish=1601334767651489941,duration=146644801,event=maven_central_mirrore:start:1f5b60d4e:end:1f5b60d4:start=1601334767656235180,finish=1601334767747354621,duration=91119441,event=maven_httpse:start:0244d984e:start:067e6246ctl start docker
travis_time:end:067e6246:start=1601334767756196591,finish=1601334767767742686,duration=11546095,event=preparee:end:067e6246:start=1601334767756196591,finish=1601334770773036997,duration=3016840406,event=servicese:start:03122ad7e:end:03122ad7:start=1601334770779024006,finish=1601334770782351741,duration=3327735,event=fix_ps4e:start:01620768e:start:06853d58it https://github.com/ether/[secure].git ether/[secure]
Cloning into 'ether/[secure]'...
travis_time:end:06853d58:start=1601334770794647731,finish=1601334771848194131,duration=1053546400,event=checkoute:end:06853d58:start=1601334770794647731,finish=1601334771912599562,duration=1117951831,event=checkoute:start:05944ed7Setting environment variables from repository settings
$ export SAUCE_USERNAME=[secure]
$ export SAUCE_ACCESS_KEY=[secure]

travis_time:end:05944ed7:start=1601334771917146574,finish=1601334771924888797,duration=7742223,event=env.installe:start:0b517b37 install lts/*
Downloading and installing node v12.18.4...
Downloading https://nodejs.org/dist/v12.18.4/node-v12.18.4-linux-x64.tar.xz...
Computing checksum with sha256sum
Checksums matched!
Now using node v12.18.4 (npm v6.14.6)
travis_time:end:0b517b37:start=1601334772907326999,finish=1601334775689770051,duration=2782443052,event=setup.install --version
6.14.6
$ nvm --version
0.36.0

travis_fold:start:install.1e:start:01b290c2e:end:01b290c2:start=1601334776229641621,finish=1601334776517951832,duration=288310211,event=installe:start:1a632c44 .
Sending build context to Docker daemon  8.308MB
Step 1/15 : FROM node:10-buster-slim
10-buster-slim: Pulling from library/node
d121f8d1c412: Pulling fs layer
3a54a24e4e59: Pulling fs layer
d529751e49be: Pulling fs layer
4e4e747e0ab9: Pulling fs layer
2cc64762bc94: Pulling fs layer
4e4e747e0ab9: Waiting
2cc64762bc94: Waiting
3a54a24e4e59: Verifying Checksum
3a54a24e4e59: Download complete
d529751e49be: Verifying Checksum
d529751e49be: Download complete
d121f8d1c412: Verifying Checksum
d121f8d1c412: Download complete
4e4e747e0ab9: Verifying Checksum
4e4e747e0ab9: Download complete
2cc64762bc94: Verifying Checksum
2cc64762bc94: Download complete
d121f8d1c412: Pull complete
3a54a24e4e59: Pull complete
d529751e49be: Pull complete
4e4e747e0ab9: Pull complete
2cc64762bc94: Pull complete
Digest: sha256:f825466cc5af397f6559649c2050c0632fa3598645d76fe0794b39eb90858df0
Status: Downloaded newer image for node:10-buster-slim
 ---> 2f85514a2182
Step 2/15 : LABEL maintainer="Etherpad team, https://github.com/ether/[secure]"
 ---> Running in bb3bf93ff22a
Removing intermediate container bb3bf93ff22a
 ---> 5dc61e61fb57
Step 3/15 : ARG ETHERPAD_PLUGINS=
 ---> Running in f3d3fb7ff99d
Removing intermediate container f3d3fb7ff99d
 ---> b18149782495
Step 4/15 : ENV NODE_ENV=production
 ---> Running in 388b62b2f57d
Removing intermediate container 388b62b2f57d
 ---> 6f1c75e35583
Step 5/15 : RUN useradd --uid 5001 --create-home etherpad
 ---> Running in c95dd32117c4
Removing intermediate container c95dd32117c4
 ---> 7f14c866df2e
Step 6/15 : RUN mkdir /opt/[secure] && chown etherpad:0 /opt/[secure]
 ---> Running in c25a3ea52a8b
Removing intermediate container c25a3ea52a8b
 ---> 068023b8f72c
Step 7/15 : USER etherpad
 ---> Running in 72296a430697
Removing intermediate container 72296a430697
 ---> 72190f747115
Step 8/15 : WORKDIR /opt/[secure]
 ---> Running in 164cb99b5d66
Removing intermediate container 164cb99b5d66
 ---> 4fa69d477ebd
Step 9/15 : COPY --chown=etherpad:0 ./ ./
 ---> 45a776616d32
Step 10/15 : RUN bin/installDeps.sh && rm -rf ~/.npm/_cacache
 ---> Running in a7bb0791fef1
Copy the settings template to settings.json...
Ensure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.
added 514 packages in 7.218s
Clearing minified cache...
Removing intermediate container a7bb0791fef1
 ---> f9e2a3e81393
Step 11/15 : RUN for PLUGIN_NAME in ${ETHERPAD_PLUGINS}; do npm install "${PLUGIN_NAME}" || exit 1; done
 ---> Running in 8ed3a1bb6148
Removing intermediate container 8ed3a1bb6148
 ---> 40d4506720f5
Step 12/15 : COPY --chown=etherpad:0 ./settings.json.docker /opt/[secure]/settings.json
 ---> 5e1701dc87bc
Step 13/15 : RUN chmod -R g=u .
 ---> Running in f2aa05b8c51a
Removing intermediate container f2aa05b8c51a
 ---> 7c2046fce0a7
Step 14/15 : EXPOSE 9001
 ---> Running in c39ae959e0b1
Removing intermediate container c39ae959e0b1
 ---> 6c707a7668b6
Step 15/15 : CMD ["node", "node_modules/ep_[secure]/node/server.js"]
 ---> Running in f488936d47a8
Removing intermediate container f488936d47a8
 ---> 977150034b24
Successfully built 977150034b24
Successfully tagged epl-debian-slim:latest
travis_time:end:1a632c44:start=1601334776525955601,finish=1601334827713570612,duration=51187615011,event=installe:start:0bdd4bd3it/Dockerfile.nginx -t nginx-latest .
Sending build context to Docker daemon  8.306MB
Step 1/2 : FROM nginx
latest: Pulling from library/nginx
d121f8d1c412: Already exists
ebd81fc8c071: Pulling fs layer
655316c160af: Pulling fs layer
d15953c0e0f8: Pulling fs layer
2ee525c5c3cc: Pulling fs layer
2ee525c5c3cc: Waiting
d15953c0e0f8: Verifying Checksum
d15953c0e0f8: Download complete
655316c160af: Verifying Checksum
655316c160af: Download complete
2ee525c5c3cc: Verifying Checksum
2ee525c5c3cc: Download complete
ebd81fc8c071: Verifying Checksum
ebd81fc8c071: Download complete
ebd81fc8c071: Pull complete
655316c160af: Pull complete
d15953c0e0f8: Pull complete
2ee525c5c3cc: Pull complete
Digest: sha256:794275d96b4ab96eeb954728a7bf11156570e8372ecd5ed0cbc7280313a27d19
Status: Downloaded newer image for nginx:latest
 ---> 7e4d58f0e5f3
Step 2/2 : COPY ./tests/ratelimit/nginx.conf /etc/nginx/nginx.conf
 ---> e24909085545
Successfully built e24909085545
Successfully tagged nginx-latest:latest
travis_time:end:0bdd4bd3:start=1601334827719486385,finish=1601334830831470474,duration=3111984089,event=installe:start:024448d7it/Dockerfile.anotherip -t anotherip .
Sending build context to Docker daemon  8.306MB
Step 1/5 : FROM node:alpine3.12
alpine3.12: Pulling from library/node
df20fa9351a1: Pulling fs layer
e58381670ca6: Pulling fs layer
26c16fac282c: Pulling fs layer
4c9757a60dc0: Pulling fs layer
4c9757a60dc0: Waiting
26c16fac282c: Verifying Checksum
26c16fac282c: Download complete
df20fa9351a1: Verifying Checksum
df20fa9351a1: Download complete
e58381670ca6: Verifying Checksum
e58381670ca6: Download complete
4c9757a60dc0: Verifying Checksum
4c9757a60dc0: Download complete
df20fa9351a1: Pull complete
e58381670ca6: Pull complete
26c16fac282c: Pull complete
4c9757a60dc0: Pull complete
Digest: sha256:6b909eef76f5bd42f20f5e62e241e7e34ca9b58b5cb1bb54146ad0e524fca5b9
Status: Downloaded newer image for node:alpine3.12
 ---> 75553673d3f9
Step 2/5 : RUN apk add --no-cache bash
 ---> Running in d581227628e1
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/main/x86_64/APKINDEX.tar.gz
fetch http://dl-cdn.alpinelinux.org/alpine/v3.12/community/x86_64/APKINDEX.tar.gz
(1/4) Installing ncurses-terminfo-base (6.2_p20200523-r0)
(2/4) Installing ncurses-libs (6.2_p20200523-r0)
(3/4) Installing readline (8.0.4-r0)
(4/4) Installing bash (5.0.17-r0)
Executing bash-5.0.17-r0.post-install
Executing busybox-1.31.1-r16.trigger
OK: 9 MiB in 20 packages
Removing intermediate container d581227628e1
 ---> ce5e4b489096
Step 3/5 : WORKDIR /tmp
 ---> Running in c78fd3fe08da
Removing intermediate container c78fd3fe08da
 ---> 13c3ae466d9e
Step 4/5 : RUN npm i etherpad-cli-client
 ---> Running in 2d882cbddc62
npm WARN saveError ENOENT: no such file or directory, open '/tmp/package.json'
npm notice created a lockfile as package-lock.json. You should commit this file.
npm WARN enoent ENOENT: no such file or directory, open '/tmp/package.json'
npm WARN tmp No description
npm WARN tmp No repository field.
npm WARN tmp No README data
npm WARN tmp No license field.

+ etherpad-cli-client@0.0.9
added 33 packages from 25 contributors and audited 33 packages in 1.916s
found 0 vulnerabilities

Removing intermediate container 2d882cbddc62
 ---> a673195322e5
Step 5/5 : COPY ./tests/ratelimit/send_changesets.js /tmp/send_changesets.js
 ---> b75e94ea7f48
Successfully built b75e94ea7f48
Successfully tagged anotherip:latest
travis_time:end:024448d7:start=1601334830838503792,finish=1601334840246343588,duration=9407839796,event=installe:start:1de0b728 --network ep_net --ip 172.23.42.1 -d nginx-latest
718705ce5060d4ab6700ee1015fadc67d9da4549148d631151b0e0dd65e45569
travis_time:end:1de0b728:start=1601334840253585536,finish=1601334841007488426,duration=753902890,event=installe:start:028e6168e etherpad-docker -p 9000:9001 --rm --network ep_net --ip 172.23.42.2 -e 'TRUST_PROXY=true' epl-debian-slim &
travis_time:end:028e6168:start=1601334841013406562,finish=1601334841021609354,duration=8202792,event=installe:start:0f2a194e --network ep_net --ip 172.23.42.3 --name anotherip -dt anotherip
f51ebaadc55199c98fb2fcea00197f8dbd9abdd4a71b47cf86e7eb722efe18dd
travis_time:end:0f2a194e:start=1601334841036681545,finish=1601334841862417947,duration=825736402,event=installe:start:028b8911plate to settings.json...
Ensure that all dependencies are up to date...  If this is the first time you have run Etherpad please be patient.
[2020-09-28 23:14:03.008] [DEBUG] console - Running on Node v10.22.1 (minimum required Node version: 10.13.0)
[2020-09-28 23:14:03.194] [INFO] console - All relative paths will be interpreted relative to the identified Etherpad base dir: /opt/[secure]
[2020-09-28 23:14:03.195] [INFO] console - Random string used for versioning assets: bc4dd04d
[2020-09-28 23:14:03.196] [DEBUG] AbsolutePaths - Relative path "settings.json" can be rewritten to "/opt/[secure]/settings.json"
[2020-09-28 23:14:03.196] [DEBUG] AbsolutePaths - Relative path "credentials.json" can be rewritten to "/opt/[secure]/credentials.json"
[2020-09-28 23:14:03.221] [INFO] console - settings loaded from: /opt/[secure]/settings.json
[2020-09-28 23:14:03.222] [DEBUG] console - Environment variable "TITLE" not found for configuration key "title". Falling back to default value.
[2020-09-28 23:14:03.223] [DEBUG] console - Environment variable "FAVICON" not found for configuration key "favicon". Falling back to default value.
[2020-09-28 23:14:03.223] [DEBUG] console - Environment variable "SKIN_NAME" not found for configuration key "skinName". Falling back to default value.
[2020-09-28 23:14:03.223] [DEBUG] console - Environment variable "SKIN_VARIANTS" not found for configuration key "skinVariants". Falling back to default value.
[2020-09-28 23:14:03.224] [DEBUG] console - Environment variable "IP" not found for configuration key "ip". Falling back to default value.
[2020-09-28 23:14:03.224] [DEBUG] console - Environment variable "PORT" not found for configuration key "port". Falling back to default value.
[2020-09-28 23:14:03.224] [DEBUG] console - Environment variable "SHOW_SETTINGS_IN_ADMIN_PAGE" not found for configuration key "showSettingsInAdminPage". Falling back to default value.
[2020-09-28 23:14:03.224] [DEBUG] console - Environment variable "DB_TYPE" not found for configuration key "dbType". Falling back to default value.
[2020-09-28 23:14:03.224] [WARN] console - Environment variable "DB_HOST" does not contain any value for configuration key "host", and no default was given. Returning null.
[2020-09-28 23:14:03.225] [WARN] console - Environment variable "DB_PORT" does not contain any value for configuration key "port", and no default was given. Returning null.
[2020-09-28 23:14:03.225] [WARN] console - Environment variable "DB_NAME" does not contain any value for configuration key "database", and no default was given. Returning null.
[2020-09-28 23:14:03.225] [WARN] console - Environment variable "DB_USER" does not contain any value for configuration key "user", and no default was given. Returning null.
[2020-09-28 23:14:03.228] [WARN] console - Environment variable "DB_PASS" does not contain any value for configuration key "password", and no default was given. Returning null.
[2020-09-28 23:14:03.228] [WARN] console - Environment variable "DB_CHARSET" does not contain any value for configuration key "charset", and no default was given. Returning null.
[2020-09-28 23:14:03.228] [DEBUG] console - Environment variable "DB_FILENAME" not found for configuration key "filename". Falling back to default value.
[2020-09-28 23:14:03.229] [DEBUG] console - Environment variable "DEFAULT_PAD_TEXT" not found for configuration key "defaultPadText". Falling back to default value.
[2020-09-28 23:14:03.229] [DEBUG] console - Environment variable "PAD_OPTIONS_NO_COLORS" not found for configuration key "noColors". Falling back to default value.
[2020-09-28 23:14:03.229] [DEBUG] console - Environment variable "PAD_OPTIONS_SHOW_CONTROLS" not found for configuration key "showControls". Falling back to default value.
[2020-09-28 23:14:03.229] [DEBUG] console - Environment variable "PAD_OPTIONS_SHOW_CHAT" not found for configuration key "showChat". Falling back to default value.
[2020-09-28 23:14:03.229] [DEBUG] console - Environment variable "PAD_OPTIONS_SHOW_LINE_NUMBERS" not found for configuration key "showLineNumbers". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_USE_MONOSPACE_FONT" not found for configuration key "useMonospaceFont". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_USER_NAME" not found for configuration key "userName". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_USER_COLOR" not found for configuration key "userColor". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_RTL" not found for configuration key "rtl". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_ALWAYS_SHOW_CHAT" not found for configuration key "alwaysShowChat". Falling back to default value.
[2020-09-28 23:14:03.230] [DEBUG] console - Environment variable "PAD_OPTIONS_CHAT_AND_USERS" not found for configuration key "chatAndUsers". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_OPTIONS_LANG" not found for configuration key "lang". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_ALT_F9" not found for configuration key "altF9". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_ALT_C" not found for configuration key "altC". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_SHIFT_2" not found for configuration key "cmdShift2". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_DELETE" not found for configuration key "delete". Falling back to default value.
[2020-09-28 23:14:03.231] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_RETURN" not found for configuration key "return". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_ESC" not found for configuration key "esc". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_S" not found for configuration key "cmdS". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_TAB" not found for configuration key "tab". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_Z" not found for configuration key "cmdZ". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_Y" not found for configuration key "cmdY". Falling back to default value.
[2020-09-28 23:14:03.232] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_I" not found for configuration key "cmdI". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_B" not found for configuration key "cmdB". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_U" not found for configuration key "cmdU". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_5" not found for configuration key "cmd5". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_SHIFT_L" not found for configuration key "cmdShiftL". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_SHIFT_N" not found for configuration key "cmdShiftN". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_SHIFT_1" not found for configuration key "cmdShift1". Falling back to default value.
[2020-09-28 23:14:03.233] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_SHIFT_C" not found for configuration key "cmdShiftC". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CMD_H" not found for configuration key "cmdH". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_CTRL_HOME" not found for configuration key "ctrlHome". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_PAGE_UP" not found for configuration key "pageUp". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "PAD_SHORTCUTS_ENABLED_PAGE_DOWN" not found for configuration key "pageDown". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "SUPPRESS_ERRORS_IN_PAD_TEXT" not found for configuration key "suppressErrorsInPadText". Falling back to default value.
[2020-09-28 23:14:03.234] [DEBUG] console - Environment variable "REQUIRE_SESSION" not found for configuration key "requireSession". Falling back to default value.
[2020-09-28 23:14:03.235] [DEBUG] console - Environment variable "EDIT_ONLY" not found for configuration key "editOnly". Falling back to default value.
[2020-09-28 23:14:03.235] [DEBUG] console - Environment variable "SESSION_NO_PASSWORD" not found for configuration key "sessionNoPassword". Falling back to default value.
[2020-09-28 23:14:03.235] [DEBUG] console - Environment variable "MINIFY" not found for configuration key "minify". Falling back to default value.
[2020-09-28 23:14:03.235] [DEBUG] console - Environment variable "MAX_AGE" not found for configuration key "maxAge". Falling back to default value.
[2020-09-28 23:14:03.235] [WARN] console - Environment variable "ABIWORD" does not contain any value for configuration key "abiword", and no default was given. Returning null.
[2020-09-28 23:14:03.236] [WARN] console - Environment variable "SOFFICE" does not contain any value for configuration key "soffice", and no default was given. Returning null.
[2020-09-28 23:14:03.236] [WARN] console - Environment variable "TIDY_HTML" does not contain any value for configuration key "tidyHtml", and no default was given. Returning null.
[2020-09-28 23:14:03.236] [DEBUG] console - Environment variable "ALLOW_UNKNOWN_FILE_ENDS" not found for configuration key "allowUnknownFileEnds". Falling back to default value.
[2020-09-28 23:14:03.236] [DEBUG] console - Environment variable "REQUIRE_AUTHENTICATION" not found for configuration key "requireAuthentication". Falling back to default value.
[2020-09-28 23:14:03.236] [DEBUG] console - Environment variable "REQUIRE_AUTHORIZATION" not found for configuration key "requireAuthorization". Falling back to default value.
[2020-09-28 23:14:03.237] [DEBUG] console - Configuration key "trustProxy" will be read from environment variable "TRUST_PROXY"
[2020-09-28 23:14:03.237] [DEBUG] console - Environment variable "DISABLE_IP_LOGGING" not found for configuration key "disableIPlogging". Falling back to default value.
[2020-09-28 23:14:03.237] [DEBUG] console - Environment variable "AUTOMATIC_RECONNECTION_TIMEOUT" not found for configuration key "automaticReconnectionTimeout". Falling back to default value.
[2020-09-28 23:14:03.237] [DEBUG] console - Environment variable "FOCUS_LINE_PERCENTAGE_ABOVE" not found for configuration key "editionAboveViewport". Falling back to default value.
[2020-09-28 23:14:03.237] [DEBUG] console - Environment variable "FOCUS_LINE_PERCENTAGE_BELOW" not found for configuration key "editionBelowViewport". Falling back to default value.
[2020-09-28 23:14:03.238] [DEBUG] console - Environment variable "FOCUS_LINE_DURATION" not found for configuration key "duration". Falling back to default value.
[2020-09-28 23:14:03.238] [DEBUG] console - Environment variable "FOCUS_LINE_CARET_SCROLL" not found for configuration key "scrollWhenCaretIsInTheLastLineOfViewport". Falling back to default value.
[2020-09-28 23:14:03.238] [DEBUG] console - Environment variable "FOCUS_LINE_PERCENTAGE_ARROW_UP" not found for configuration key "percentageToScrollWhenUserPressesArrowUp". Falling back to default value.
[2020-09-28 23:14:03.238] [WARN] console - Environment variable "ADMIN_PASSWORD" does not contain any value for configuration key "password", and no default was given. Returning null.
[2020-09-28 23:14:03.238] [WARN] console - Environment variable "USER_PASSWORD" does not contain any value for configuration key "password", and no default was given. Returning null.
[2020-09-28 23:14:03.238] [DEBUG] console - Environment variable "LOAD_TEST" not found for configuration key "loadTest". Falling back to default value.
[2020-09-28 23:14:03.239] [DEBUG] console - Environment variable "IMPORT_EXPORT_RATE_LIMIT_WINDOW" not found for configuration key "windowMs". Falling back to default value.
[2020-09-28 23:14:03.239] [DEBUG] console - Environment variable "IMPORT_EXPORT_MAX_REQ_PER_IP" not found for configuration key "max". Falling back to default value.
[2020-09-28 23:14:03.239] [DEBUG] console - Environment variable "IMPORT_MAX_FILE_SIZE" not found for configuration key "importMaxFileSize". Falling back to default value.
[2020-09-28 23:14:03.239] [DEBUG] console - Environment variable "EXPOSE_VERSION" not found for configuration key "exposeVersion". Falling back to default value.
[2020-09-28 23:14:03.239] [DEBUG] console - Environment variable "LOGLEVEL" not found for configuration key "loglevel". Falling back to default value.
[2020-09-28 23:14:03.240] [INFO] console - No credentials file found in /opt/[secure]/credentials.json. Ignoring.
[2020-09-28 23:14:03.242] [INFO] console - Using skin "colibris" in dir: /opt/[secure]/src/static/skins/colibris
[2020-09-28 23:14:03.243] [WARN] console - Removing user "admin", because its "password" is null.
[2020-09-28 23:14:03.243] [WARN] console - Removing user "user", because its "password" is null.
[2020-09-28 23:14:03.243] [INFO] console - Session key file "/opt/[secure]/SESSIONKEY.txt" not found. Creating with random contents.
[2020-09-28 23:14:03.245] [WARN] console - DirtyDB is used. This is fine for testing but not recommended for production. File location: /opt/[secure]/var/dirty.db
[2020-09-28 23:14:05.280] [INFO] APIHandler - Api key file "/opt/[secure]/APIKEY.txt" not found. Creating with random contents.
[2020-09-28 23:14:05.551] [INFO] console - Installed plugins: 
[2020-09-28 23:14:05.563] [INFO] console - Report bugs at https://github.com/ether/[secure]/issues
[2020-09-28 23:14:05.573] [WARN] console - Can't get git version for server header
ENOENT: no such file or directory, open '/opt/[secure]/.git/8eed33ab6ab00227be87a664abb533d650e'
[2020-09-28 23:14:05.577] [WARN] console - Can't get git version for server header
ENOENT: no such file or directory, open '/opt/[secure]/.git/8eed33ab6ab00227be87a664abb533d650e'
[2020-09-28 23:14:05.579] [INFO] console - Your Etherpad version is 1.8.6 ()
Node worker_threads not available. Trying to fall back to tiny-worker polyfill...
Node worker_threads not available. Trying to fall back to tiny-worker polyfill...
[2020-09-28 23:14:11.634] [INFO] console - You can access your Etherpad instance at http://0.0.0.0:9001/
[2020-09-28 23:14:11.634] [WARN] console - Admin username and password not set in settings.json.  To access admin please uncomment and edit 'users' in settings.json

> wd@1.12.1 install /home/travis/build/ether/[secure]/src/node_modules/wd
> node scripts/build-browser-scripts

added 700 packages in 12.292s
Clearing minified cache...
travis_time:end:028b8911:start=1601334841867938843,finish=1601334854739274553,duration=12871335710,event=installe:start:2213d14dit && bash testlimits.sh
[2020-09-28 23:14:14.880] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms: { '6S9K3JG7S5uIDoPVAAAA': [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: true,
        upgraded: false,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer:
         Timeout {
           _called: false,
           _idleTimeout: 100,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 11963,
           _onTimeout: [Function: check],
           _timerArgs: undefined,
           _repeat: 100,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25836,
           [Symbol(triggerId)]: 25811 },
        upgradeTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 10000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 11957,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25822,
           [Symbol(triggerId)]: 25813 },
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 11972,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25846,
           [Symbol(triggerId)]: 25845 },
        transport: [XHR],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: true,
     upgraded: false,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer:
      Timeout {
        _called: false,
        _idleTimeout: 100,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 11963,
        _onTimeout: [Function: check],
        _timerArgs: undefined,
        _repeat: 100,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25836,
        [Symbol(triggerId)]: 25811 },
     upgradeTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 10000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 11957,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25822,
        [Symbol(triggerId)]: 25813 },
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 11972,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25846,
        [Symbol(triggerId)]: 25845 },
     transport:
      XHR {
        readyState: 'open',
        discarded: false,
        closeTimeout: 30000,
        maxHttpBufferSize: 100000000,
        httpCompression: [Object],
        supportsBinary: false,
        _events: [Object],
        _eventsCount: 4,
        sid: '6S9K3JG7S5uIDoPVAAAA',
        req: null,
        res: null,
        writable: false,
        dataReq: null,
        dataRes: null },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms: { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:14.910] [INFO] access - [CREATE] pad:BACKEND_TEST_ratelimit_101ms socket:6S9K3JG7S5uIDoPVAAAA IP:172.23.0.1 authorID:a.lvFV3QayhhtHVHbC
[2020-09-28 23:14:15.530] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [Array],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 12623,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25882,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [ [] ],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 12623,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25882,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:15.629] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 12722,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25895,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 12722,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25895,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:15.731] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 12824,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25907,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 12824,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25907,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:15.832] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 12926,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25919,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 12926,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25919,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:15.934] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13028,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25931,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13028,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25931,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.034] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13128,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25945,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13128,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25945,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.136] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13229,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25957,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13229,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25957,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.237] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13331,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25969,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13331,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25969,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.338] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13431,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25981,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13431,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25981,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.439] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13532,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 25993,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13532,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 25993,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.541] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13634,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26005,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13634,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26005,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.642] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13735,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26017,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13735,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26017,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.742] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13836,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26029,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13836,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26029,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.845] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 13938,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26041,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 13938,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26041,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:16.946] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14039,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26053,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14039,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26053,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.047] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14140,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26067,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14140,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26067,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.148] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14241,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26079,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14241,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26079,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.250] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14343,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26091,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14343,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26091,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.351] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14444,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26103,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14444,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26103,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.452] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14545,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26115,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14545,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26115,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.553] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14647,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26127,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14647,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26127,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.654] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14747,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26139,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14747,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26139,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.755] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14849,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26151,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14849,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26151,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.856] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 14949,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26163,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     remoteAddress: '172.23.42.1',
     checkIntervalTimer: null,
     upgradeTimeoutTimer: null,
     pingTimeoutTimer:
      Timeout {
        _called: false,
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 14949,
        _onTimeout: [Function],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(unrefed)]: false,
        [Symbol(asyncId)]: 26163,
        [Symbol(triggerId)]: 25811 },
     transport:
      WebSocket {
        readyState: 'open',
        discarded: false,
        socket: [WebSocket],
        writable: true,
        perMessageDeflate: [Object],
        supportsBinary: true,
        _events: [Object],
        _eventsCount: 4 },
     _events:
      [Object: null prototype] {
        close: [Array],
        data: [Function: bound ],
        error: [Function: bound ] },
     _eventsCount: 3 },
  rooms:
   { '6S9K3JG7S5uIDoPVAAAA': '6S9K3JG7S5uIDoPVAAAA',
     BACKEND_TEST_ratelimit_101ms: 'BACKEND_TEST_ratelimit_101ms' },
  acks: {},
  connected: true,
  disconnected: false,
  handshake:
   { headers:
      { host: '127.0.0.1',
        'x-real-ip': '172.23.0.1',
        'x-forwarded-for': '172.23.0.1',
        'x-forwarded-proto': 'http',
        connection: 'close',
        'user-agent': 'node-XMLHttpRequest',
        accept: '*/*',
        cookie: undefined },
     time:
      'Mon Sep 28 2020 23:14:14 GMT+0000 (Coordinated Universal Time)',
     address: '172.23.42.1',
     xdomain: false,
     secure: false,
     issued: 1601334854852,
     url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
     query: { EIO: '3', transport: 'polling', t: 'NJM_iIn', b64: '1' } },
  fns: [],
  flags: {},
  _rooms: [],
  _send: [Function],
  send: [Function],
  _events:
   [Object: null prototype] { message: [AsyncFunction], disconnect: [Function] },
  _eventsCount: 2 }
[2020-09-28 23:14:17.958] [INFO] console - Socket {
  nsp:
   Namespace {
     name: '/',
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Circular],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     connected: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     fns: [ [AsyncFunction] ],
     ids: 0,
     rooms: [],
     flags: {},
     adapter:
      Adapter {
        nsp: [Circular],
        rooms: [Object],
        sids: [Object],
        encoder: Encoder {} },
     _events: [Object: null prototype] { connection: [Function] },
     _eventsCount: 1 },
  server:
   Server {
     nsps:
      { '/': [Namespace],
        '/settings': [Namespace],
        '/pluginfw/installer': [Namespace] },
     parentNsps: Map {},
     _path: '/socket.io',
     _serveClient: true,
     parser:
      { protocol: 4,
        types: [Array],
        CONNECT: 0,
        DISCONNECT: 1,
        EVENT: 2,
        ACK: 3,
        ERROR: 4,
        BINARY_EVENT: 5,
        BINARY_ACK: 6,
        Encoder: [Function: Encoder],
        Decoder: [Function: Decoder] },
     encoder: Encoder {},
     _adapter: [Function: Adapter],
     _origins: '*:*',
     sockets:
      Namespace {
        name: '/',
        server: [Circular],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Adapter],
        _events: [Object],
        _eventsCount: 1 },
     eio:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     httpServer:
      Server {
        insecureHTTPParser: undefined,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '4:0.0.0.0:9001',
        [Symbol(IncomingMessage)]: [Function],
        [Symbol(ServerResponse)]: [Function],
        [Symbol(asyncId)]: 25779 },
     engine:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 } },
  adapter:
   Adapter {
     nsp:
      Namespace {
        name: '/',
        server: [Server],
        sockets: [Object],
        connected: [Object],
        fns: [Array],
        ids: 0,
        rooms: [],
        flags: {},
        adapter: [Circular],
        _events: [Object],
        _eventsCount: 1 },
     rooms:
      { '6S9K3JG7S5uIDoPVAAAA': [Room],
        BACKEND_TEST_ratelimit_101ms: [Room] },
     sids: { '6S9K3JG7S5uIDoPVAAAA': [Object] },
     encoder: Encoder {} },
  id: '6S9K3JG7S5uIDoPVAAAA',
  client:
   Client {
     server:
      Server {
        nsps: [Object],
        parentNsps: Map {},
        _path: '/socket.io',
        _serveClient: true,
        parser: [Object],
        encoder: Encoder {},
        _adapter: [Function: Adapter],
        _origins: '*:*',
        sockets: [Namespace],
        eio: [Server],
        httpServer: [Server],
        engine: [Server] },
     conn:
      Socket {
        id: '6S9K3JG7S5uIDoPVAAAA',
        server: [Server],
        upgrading: false,
        upgraded: true,
        readyState: 'open',
        writeBuffer: [],
        packetsFn: [],
        sentCallbackFn: [],
        cleanupFn: [Array],
        request: [IncomingMessage],
        remoteAddress: '172.23.42.1',
        checkIntervalTimer: null,
        upgradeTimeoutTimer: null,
        pingTimeoutTimer:
         Timeout {
           _called: false,
           _idleTimeout: 30000,
           _idlePrev: [TimersList],
           _idleNext: [TimersList],
           _idleStart: 15051,
           _onTimeout: [Function],
           _timerArgs: undefined,
           _repeat: null,
           _destroyed: false,
           [Symbol(unrefed)]: false,
           [Symbol(asyncId)]: 26175,
           [Symbol(triggerId)]: 25811 },
        transport: [WebSocket],
        _events: [Object],
        _eventsCount: 3 },
     encoder: Encoder {},
     decoder: Decoder { reconstructor: null, _callbacks: [Object] },
     id: '6S9K3JG7S5uIDoPVAAAA',
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&transport=polling&t=NJM_iIn&b64=1',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client: [Socket],
        _consuming: false,
        _dumped: true,
        _query: [Object],
        res: [ServerResponse],
        cleanup: [Function: cleanup],
        secret:
         'ca928d3b5a585be378ef7e65d05d9b8deb4bff3b1ae5b5490489bb60387991a8',
        cookies: [Object: null prototype] {},
        signedCookies: [Object: null prototype] {} },
     onclose: [Function: bound ],
     ondata: [Function: bound ],
     onerror: [Function: bound ],
     ondecoded: [Function: bound ],
     sockets: { '6S9K3JG7S5uIDoPVAAAA': [Circular] },
     nsps: { '/': [Circular] },
     connectBuffer: [] },
  conn:
   Socket {
     id: '6S9K3JG7S5uIDoPVAAAA',
     server:
      Server {
        clients: [Object],
        clientsCount: 1,
        wsEngine: 'ws',
        pingTimeout: 5000,
        pingInterval: 25000,
        upgradeTimeout: 10000,
        maxHttpBufferSize: 100000000,
        transports: [Array],
        allowUpgrades: true,
        allowRequest: [Function: bound ],
        cookie: false,
        cookiePath: '/',
        cookieHttpOnly: true,
        perMessageDeflate: [Object],
        httpCompression: [Object],
        ws: [WebSocketServer],
        _events: [Object],
        _eventsCount: 1 },
     upgrading: false,
     upgraded: true,
     readyState: 'open',
     writeBuffer: [],
     packetsFn: [],
     sentCallbackFn: [],
     cleanupFn: [ [Function], [Function] ],
     request:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/socket.io/?EIO=3&tr101ms with proxy returned with 1
101ms without proxy returned with 1
FAILED: ratelimit was triggered during direct and proxy requests
travis_time:end:2213d14d:start=1601334854745230510,finish=1601334869331873900,duration=14586643390,event=scriptThe command "cd tests/ratelimit && bash testlimits.sh" exited with 1.


Done. Your build exited with 1.
